(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Application', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::EMRServerless::Application', Properties: { ReleaseLabel: if errorOnEmptyProp then (error 'You need to define ReleaseLabel properties for AWS::EMRServerless::Application resource') else null, Type: if errorOnEmptyProp then (error 'You need to define Type properties for AWS::EMRServerless::Application resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withAutoStartConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostartconfiguration', args=[d.arg(name='autoStartConfiguration', type=d.T.object)]),
  withAutoStartConfiguration(autoStartConfiguration): { Properties+: { AutoStartConfiguration: autoStartConfiguration } },
  '#withAutoStartConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostartconfiguration', args=[d.arg(name='autoStartConfiguration', type=d.T.object)]),
  withAutoStartConfigurationMixin(autoStartConfiguration): { Properties+: { AutoStartConfiguration+: autoStartConfiguration } },
  '#withAutoStopConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostopconfiguration', args=[d.arg(name='autoStopConfiguration', type=d.T.object)]),
  withAutoStopConfiguration(autoStopConfiguration): { Properties+: { AutoStopConfiguration: autoStopConfiguration } },
  '#withAutoStopConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-autostopconfiguration', args=[d.arg(name='autoStopConfiguration', type=d.T.object)]),
  withAutoStopConfigurationMixin(autoStopConfiguration): { Properties+: { AutoStopConfiguration+: autoStopConfiguration } },
  '#withInitialCapacity':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-initialcapacity', args=[d.arg(name='initialCapacity', type=d.T.array)]),
  withInitialCapacity(initialCapacity): { Properties+: { InitialCapacity: initialCapacity } },
  '#withInitialCapacityMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-initialcapacity', args=[d.arg(name='initialCapacity', type=d.T.array)]),
  withInitialCapacityMixin(initialCapacity): { Properties+: { InitialCapacity+: initialCapacity } },
  '#withMaximumCapacity':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-maximumcapacity', args=[d.arg(name='maximumCapacity', type=d.T.object)]),
  withMaximumCapacity(maximumCapacity): { Properties+: { MaximumCapacity: maximumCapacity } },
  '#withMaximumCapacityMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-maximumcapacity', args=[d.arg(name='maximumCapacity', type=d.T.object)]),
  withMaximumCapacityMixin(maximumCapacity): { Properties+: { MaximumCapacity+: maximumCapacity } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withNetworkConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfiguration(networkConfiguration): { Properties+: { NetworkConfiguration: networkConfiguration } },
  '#withNetworkConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfigurationMixin(networkConfiguration): { Properties+: { NetworkConfiguration+: networkConfiguration } },
  '#withReleaseLabel':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-releaselabel', args=[d.arg(name='releaseLabel', type=d.T.string)]),
  withReleaseLabel(releaseLabel): { Properties+: { ReleaseLabel: releaseLabel } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-emrserverless-application.html#cfn-emrserverless-application-type', args=[d.arg(name='type', type=d.T.string)]),
  withType(type): { Properties+: { Type: type } },
}
