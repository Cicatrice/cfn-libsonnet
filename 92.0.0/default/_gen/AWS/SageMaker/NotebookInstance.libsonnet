(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='NotebookInstance', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::SageMaker::NotebookInstance', Properties: { InstanceType: if errorOnEmptyProp then (error 'You need to define InstanceType properties for AWS::SageMaker::NotebookInstance resource') else null, RoleArn: if errorOnEmptyProp then (error 'You need to define RoleArn properties for AWS::SageMaker::NotebookInstance resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withAcceleratorTypes':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-acceleratortypes', args=[d.arg(name='acceleratorTypes', type=d.T.array)]),
  withAcceleratorTypes(acceleratorTypes): { Properties+: { AcceleratorTypes: acceleratorTypes } },
  '#withAcceleratorTypesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-acceleratortypes', args=[d.arg(name='acceleratorTypes', type=d.T.array)]),
  withAcceleratorTypesMixin(acceleratorTypes): { Properties+: { AcceleratorTypes+: acceleratorTypes } },
  '#withAdditionalCodeRepositories':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-additionalcoderepositories', args=[d.arg(name='additionalCodeRepositories', type=d.T.array)]),
  withAdditionalCodeRepositories(additionalCodeRepositories): { Properties+: { AdditionalCodeRepositories: additionalCodeRepositories } },
  '#withAdditionalCodeRepositoriesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-additionalcoderepositories', args=[d.arg(name='additionalCodeRepositories', type=d.T.array)]),
  withAdditionalCodeRepositoriesMixin(additionalCodeRepositories): { Properties+: { AdditionalCodeRepositories+: additionalCodeRepositories } },
  '#withDefaultCodeRepository':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-defaultcoderepository', args=[d.arg(name='defaultCodeRepository', type=d.T.string)]),
  withDefaultCodeRepository(defaultCodeRepository): { Properties+: { DefaultCodeRepository: defaultCodeRepository } },
  '#withDirectInternetAccess':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-directinternetaccess', args=[d.arg(name='directInternetAccess', type=d.T.string)]),
  withDirectInternetAccess(directInternetAccess): { Properties+: { DirectInternetAccess: directInternetAccess } },
  '#withInstanceMetadataServiceConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration', args=[d.arg(name='instanceMetadataServiceConfiguration', type=d.T.object)]),
  withInstanceMetadataServiceConfiguration(instanceMetadataServiceConfiguration): { Properties+: { InstanceMetadataServiceConfiguration: instanceMetadataServiceConfiguration } },
  '#withInstanceMetadataServiceConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancemetadataserviceconfiguration', args=[d.arg(name='instanceMetadataServiceConfiguration', type=d.T.object)]),
  withInstanceMetadataServiceConfigurationMixin(instanceMetadataServiceConfiguration): { Properties+: { InstanceMetadataServiceConfiguration+: instanceMetadataServiceConfiguration } },
  '#withInstanceType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-instancetype', args=[d.arg(name='instanceType', type=d.T.string)]),
  withInstanceType(instanceType): { Properties+: { InstanceType: instanceType } },
  '#withKmsKeyId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-kmskeyid', args=[d.arg(name='kmsKeyId', type=d.T.string)]),
  withKmsKeyId(kmsKeyId): { Properties+: { KmsKeyId: kmsKeyId } },
  '#withLifecycleConfigName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-lifecycleconfigname', args=[d.arg(name='lifecycleConfigName', type=d.T.string)]),
  withLifecycleConfigName(lifecycleConfigName): { Properties+: { LifecycleConfigName: lifecycleConfigName } },
  '#withNotebookInstanceName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-notebookinstancename', args=[d.arg(name='notebookInstanceName', type=d.T.string)]),
  withNotebookInstanceName(notebookInstanceName): { Properties+: { NotebookInstanceName: notebookInstanceName } },
  '#withPlatformIdentifier':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-platformidentifier', args=[d.arg(name='platformIdentifier', type=d.T.string)]),
  withPlatformIdentifier(platformIdentifier): { Properties+: { PlatformIdentifier: platformIdentifier } },
  '#withRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rolearn', args=[d.arg(name='roleArn', type=d.T.string)]),
  withRoleArn(roleArn): { Properties+: { RoleArn: roleArn } },
  '#withRootAccess':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-rootaccess', args=[d.arg(name='rootAccess', type=d.T.string)]),
  withRootAccess(rootAccess): { Properties+: { RootAccess: rootAccess } },
  '#withSecurityGroupIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-securitygroupids', args=[d.arg(name='securityGroupIds', type=d.T.array)]),
  withSecurityGroupIds(securityGroupIds): { Properties+: { SecurityGroupIds: securityGroupIds } },
  '#withSecurityGroupIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-securitygroupids', args=[d.arg(name='securityGroupIds', type=d.T.array)]),
  withSecurityGroupIdsMixin(securityGroupIds): { Properties+: { SecurityGroupIds+: securityGroupIds } },
  '#withSubnetId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-subnetid', args=[d.arg(name='subnetId', type=d.T.string)]),
  withSubnetId(subnetId): { Properties+: { SubnetId: subnetId } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withVolumeSizeInGB':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-notebookinstance.html#cfn-sagemaker-notebookinstance-volumesizeingb', args=[d.arg(name='volumeSizeInGb', type=d.T.number)]),
  withVolumeSizeInGB(volumeSizeInGb): { Properties+: { VolumeSizeInGB: volumeSizeInGb } },
}
