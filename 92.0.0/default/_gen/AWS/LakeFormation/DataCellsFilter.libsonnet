(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='DataCellsFilter', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::LakeFormation::DataCellsFilter', Properties: { DatabaseName: if errorOnEmptyProp then (error 'You need to define DatabaseName properties for AWS::LakeFormation::DataCellsFilter resource') else null, Name: if errorOnEmptyProp then (error 'You need to define Name properties for AWS::LakeFormation::DataCellsFilter resource') else null, TableCatalogId: if errorOnEmptyProp then (error 'You need to define TableCatalogId properties for AWS::LakeFormation::DataCellsFilter resource') else null, TableName: if errorOnEmptyProp then (error 'You need to define TableName properties for AWS::LakeFormation::DataCellsFilter resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withColumnNames':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnnames', args=[d.arg(name='columnNames', type=d.T.array)]),
  withColumnNames(columnNames): { Properties+: { ColumnNames: columnNames } },
  '#withColumnNamesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnnames', args=[d.arg(name='columnNames', type=d.T.array)]),
  withColumnNamesMixin(columnNames): { Properties+: { ColumnNames+: columnNames } },
  '#withColumnWildcard':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnwildcard', args=[d.arg(name='columnWildcard', type=d.T.object)]),
  withColumnWildcard(columnWildcard): { Properties+: { ColumnWildcard: columnWildcard } },
  '#withColumnWildcardMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-columnwildcard', args=[d.arg(name='columnWildcard', type=d.T.object)]),
  withColumnWildcardMixin(columnWildcard): { Properties+: { ColumnWildcard+: columnWildcard } },
  '#withDatabaseName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-databasename', args=[d.arg(name='databaseName', type=d.T.string)]),
  withDatabaseName(databaseName): { Properties+: { DatabaseName: databaseName } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withRowFilter':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-rowfilter', args=[d.arg(name='rowFilter', type=d.T.object)]),
  withRowFilter(rowFilter): { Properties+: { RowFilter: rowFilter } },
  '#withRowFilterMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-rowfilter', args=[d.arg(name='rowFilter', type=d.T.object)]),
  withRowFilterMixin(rowFilter): { Properties+: { RowFilter+: rowFilter } },
  '#withTableCatalogId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-tablecatalogid', args=[d.arg(name='tableCatalogId', type=d.T.string)]),
  withTableCatalogId(tableCatalogId): { Properties+: { TableCatalogId: tableCatalogId } },
  '#withTableName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lakeformation-datacellsfilter.html#cfn-lakeformation-datacellsfilter-tablename', args=[d.arg(name='tableName', type=d.T.string)]),
  withTableName(tableName): { Properties+: { TableName: tableName } },
}
