(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='SlackChannelConfiguration', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::SupportApp::SlackChannelConfiguration', Properties: { TeamId: if errorOnEmptyProp then (error 'You need to define TeamId properties for AWS::SupportApp::SlackChannelConfiguration resource') else null, ChannelId: if errorOnEmptyProp then (error 'You need to define ChannelId properties for AWS::SupportApp::SlackChannelConfiguration resource') else null, ChannelRoleArn: if errorOnEmptyProp then (error 'You need to define ChannelRoleArn properties for AWS::SupportApp::SlackChannelConfiguration resource') else null, NotifyOnCaseSeverity: if errorOnEmptyProp then (error 'You need to define NotifyOnCaseSeverity properties for AWS::SupportApp::SlackChannelConfiguration resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withChannelId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelid', args=[d.arg(name='channelId', type=d.T.string)]),
  withChannelId(channelId): { Properties+: { ChannelId: channelId } },
  '#withChannelName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelname', args=[d.arg(name='channelName', type=d.T.string)]),
  withChannelName(channelName): { Properties+: { ChannelName: channelName } },
  '#withChannelRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-channelrolearn', args=[d.arg(name='channelRoleArn', type=d.T.string)]),
  withChannelRoleArn(channelRoleArn): { Properties+: { ChannelRoleArn: channelRoleArn } },
  '#withNotifyOnAddCorrespondenceToCase':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyonaddcorrespondencetocase', args=[d.arg(name='notifyOnAddCorrespondenceToCase', type=d.T.bool)]),
  withNotifyOnAddCorrespondenceToCase(notifyOnAddCorrespondenceToCase): { Properties+: { NotifyOnAddCorrespondenceToCase: notifyOnAddCorrespondenceToCase } },
  '#withNotifyOnCaseSeverity':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyoncaseseverity', args=[d.arg(name='notifyOnCaseSeverity', type=d.T.string)]),
  withNotifyOnCaseSeverity(notifyOnCaseSeverity): { Properties+: { NotifyOnCaseSeverity: notifyOnCaseSeverity } },
  '#withNotifyOnCreateOrReopenCase':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyoncreateorreopencase', args=[d.arg(name='notifyOnCreateOrReopenCase', type=d.T.bool)]),
  withNotifyOnCreateOrReopenCase(notifyOnCreateOrReopenCase): { Properties+: { NotifyOnCreateOrReopenCase: notifyOnCreateOrReopenCase } },
  '#withNotifyOnResolveCase':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-notifyonresolvecase', args=[d.arg(name='notifyOnResolveCase', type=d.T.bool)]),
  withNotifyOnResolveCase(notifyOnResolveCase): { Properties+: { NotifyOnResolveCase: notifyOnResolveCase } },
  '#withTeamId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-supportapp-slackchannelconfiguration.html#cfn-supportapp-slackchannelconfiguration-teamid', args=[d.arg(name='teamId', type=d.T.string)]),
  withTeamId(teamId): { Properties+: { TeamId: teamId } },
}
