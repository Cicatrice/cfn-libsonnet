(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Agreement', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Transfer::Agreement', Properties: { LocalProfileId: if errorOnEmptyProp then (error 'You need to define LocalProfileId properties for AWS::Transfer::Agreement resource') else null, PartnerProfileId: if errorOnEmptyProp then (error 'You need to define PartnerProfileId properties for AWS::Transfer::Agreement resource') else null, ServerId: if errorOnEmptyProp then (error 'You need to define ServerId properties for AWS::Transfer::Agreement resource') else null, AccessRole: if errorOnEmptyProp then (error 'You need to define AccessRole properties for AWS::Transfer::Agreement resource') else null, BaseDirectory: if errorOnEmptyProp then (error 'You need to define BaseDirectory properties for AWS::Transfer::Agreement resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withAccessRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-accessrole', args=[d.arg(name='accessRole', type=d.T.string)]),
  withAccessRole(accessRole): { Properties+: { AccessRole: accessRole } },
  '#withBaseDirectory':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-basedirectory', args=[d.arg(name='baseDirectory', type=d.T.string)]),
  withBaseDirectory(baseDirectory): { Properties+: { BaseDirectory: baseDirectory } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withLocalProfileId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-localprofileid', args=[d.arg(name='localProfileId', type=d.T.string)]),
  withLocalProfileId(localProfileId): { Properties+: { LocalProfileId: localProfileId } },
  '#withPartnerProfileId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-partnerprofileid', args=[d.arg(name='partnerProfileId', type=d.T.string)]),
  withPartnerProfileId(partnerProfileId): { Properties+: { PartnerProfileId: partnerProfileId } },
  '#withServerId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-serverid', args=[d.arg(name='serverId', type=d.T.string)]),
  withServerId(serverId): { Properties+: { ServerId: serverId } },
  '#withStatus':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-status', args=[d.arg(name='status', type=d.T.string)]),
  withStatus(status): { Properties+: { Status: status } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-transfer-agreement.html#cfn-transfer-agreement-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
