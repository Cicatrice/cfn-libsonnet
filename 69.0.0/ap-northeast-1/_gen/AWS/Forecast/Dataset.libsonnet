(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Dataset', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Forecast::Dataset', Properties: { Domain: if errorOnEmptyProp then (error 'You need to define Domain properties for AWS::Forecast::Dataset resource') else null, Schema: if errorOnEmptyProp then (error 'You need to define Schema properties for AWS::Forecast::Dataset resource') else null, DatasetName: if errorOnEmptyProp then (error 'You need to define DatasetName properties for AWS::Forecast::Dataset resource') else null, DatasetType: if errorOnEmptyProp then (error 'You need to define DatasetType properties for AWS::Forecast::Dataset resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDataFrequency':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datafrequency', args=[d.arg(name='dataFrequency', type=d.T.string)]),
  withDataFrequency(dataFrequency): { Properties+: { DataFrequency: dataFrequency } },
  '#withDatasetName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasetname', args=[d.arg(name='datasetName', type=d.T.string)]),
  withDatasetName(datasetName): { Properties+: { DatasetName: datasetName } },
  '#withDatasetType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-datasettype', args=[d.arg(name='datasetType', type=d.T.string)]),
  withDatasetType(datasetType): { Properties+: { DatasetType: datasetType } },
  '#withDomain':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-domain', args=[d.arg(name='domain', type=d.T.string)]),
  withDomain(domain): { Properties+: { Domain: domain } },
  '#withEncryptionConfig':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-encryptionconfig', args=[d.arg(name='encryptionConfig', type=d.T.object)]),
  withEncryptionConfig(encryptionConfig): { Properties+: { EncryptionConfig: encryptionConfig } },
  '#withEncryptionConfigMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-encryptionconfig', args=[d.arg(name='encryptionConfig', type=d.T.object)]),
  withEncryptionConfigMixin(encryptionConfig): { Properties+: { EncryptionConfig+: encryptionConfig } },
  '#withSchema':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-schema', args=[d.arg(name='schema', type=d.T.object)]),
  withSchema(schema): { Properties+: { Schema: schema } },
  '#withSchemaMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-schema', args=[d.arg(name='schema', type=d.T.object)]),
  withSchemaMixin(schema): { Properties+: { Schema+: schema } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-forecast-dataset.html#cfn-forecast-dataset-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
