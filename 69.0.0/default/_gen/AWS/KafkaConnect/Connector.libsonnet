(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Connector', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::KafkaConnect::Connector', Properties: { ConnectorConfiguration: if errorOnEmptyProp then (error 'You need to define ConnectorConfiguration properties for AWS::KafkaConnect::Connector resource') else null, KafkaCluster: if errorOnEmptyProp then (error 'You need to define KafkaCluster properties for AWS::KafkaConnect::Connector resource') else null, KafkaClusterClientAuthentication: if errorOnEmptyProp then (error 'You need to define KafkaClusterClientAuthentication properties for AWS::KafkaConnect::Connector resource') else null, KafkaClusterEncryptionInTransit: if errorOnEmptyProp then (error 'You need to define KafkaClusterEncryptionInTransit properties for AWS::KafkaConnect::Connector resource') else null, Plugins: if errorOnEmptyProp then (error 'You need to define Plugins properties for AWS::KafkaConnect::Connector resource') else null, ServiceExecutionRoleArn: if errorOnEmptyProp then (error 'You need to define ServiceExecutionRoleArn properties for AWS::KafkaConnect::Connector resource') else null, Capacity: if errorOnEmptyProp then (error 'You need to define Capacity properties for AWS::KafkaConnect::Connector resource') else null, ConnectorName: if errorOnEmptyProp then (error 'You need to define ConnectorName properties for AWS::KafkaConnect::Connector resource') else null, KafkaConnectVersion: if errorOnEmptyProp then (error 'You need to define KafkaConnectVersion properties for AWS::KafkaConnect::Connector resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withCapacity':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity', args=[d.arg(name='capacity', type=d.T.object)]),
  withCapacity(capacity): { Properties+: { Capacity: capacity } },
  '#withCapacityMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-capacity', args=[d.arg(name='capacity', type=d.T.object)]),
  withCapacityMixin(capacity): { Properties+: { Capacity+: capacity } },
  '#withConnectorConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration', args=[d.arg(name='connectorConfiguration', type=d.T.object)]),
  withConnectorConfiguration(connectorConfiguration): { Properties+: { ConnectorConfiguration: connectorConfiguration } },
  '#withConnectorConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorconfiguration', args=[d.arg(name='connectorConfiguration', type=d.T.object)]),
  withConnectorConfigurationMixin(connectorConfiguration): { Properties+: { ConnectorConfiguration+: connectorConfiguration } },
  '#withConnectorDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectordescription', args=[d.arg(name='connectorDescription', type=d.T.string)]),
  withConnectorDescription(connectorDescription): { Properties+: { ConnectorDescription: connectorDescription } },
  '#withConnectorName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-connectorname', args=[d.arg(name='connectorName', type=d.T.string)]),
  withConnectorName(connectorName): { Properties+: { ConnectorName: connectorName } },
  '#withKafkaCluster':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster', args=[d.arg(name='kafkaCluster', type=d.T.object)]),
  withKafkaCluster(kafkaCluster): { Properties+: { KafkaCluster: kafkaCluster } },
  '#withKafkaClusterClientAuthentication':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication', args=[d.arg(name='kafkaClusterClientAuthentication', type=d.T.object)]),
  withKafkaClusterClientAuthentication(kafkaClusterClientAuthentication): { Properties+: { KafkaClusterClientAuthentication: kafkaClusterClientAuthentication } },
  '#withKafkaClusterClientAuthenticationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterclientauthentication', args=[d.arg(name='kafkaClusterClientAuthentication', type=d.T.object)]),
  withKafkaClusterClientAuthenticationMixin(kafkaClusterClientAuthentication): { Properties+: { KafkaClusterClientAuthentication+: kafkaClusterClientAuthentication } },
  '#withKafkaClusterEncryptionInTransit':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit', args=[d.arg(name='kafkaClusterEncryptionInTransit', type=d.T.object)]),
  withKafkaClusterEncryptionInTransit(kafkaClusterEncryptionInTransit): { Properties+: { KafkaClusterEncryptionInTransit: kafkaClusterEncryptionInTransit } },
  '#withKafkaClusterEncryptionInTransitMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaclusterencryptionintransit', args=[d.arg(name='kafkaClusterEncryptionInTransit', type=d.T.object)]),
  withKafkaClusterEncryptionInTransitMixin(kafkaClusterEncryptionInTransit): { Properties+: { KafkaClusterEncryptionInTransit+: kafkaClusterEncryptionInTransit } },
  '#withKafkaClusterMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkacluster', args=[d.arg(name='kafkaCluster', type=d.T.object)]),
  withKafkaClusterMixin(kafkaCluster): { Properties+: { KafkaCluster+: kafkaCluster } },
  '#withKafkaConnectVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-kafkaconnectversion', args=[d.arg(name='kafkaConnectVersion', type=d.T.string)]),
  withKafkaConnectVersion(kafkaConnectVersion): { Properties+: { KafkaConnectVersion: kafkaConnectVersion } },
  '#withLogDelivery':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery', args=[d.arg(name='logDelivery', type=d.T.object)]),
  withLogDelivery(logDelivery): { Properties+: { LogDelivery: logDelivery } },
  '#withLogDeliveryMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-logdelivery', args=[d.arg(name='logDelivery', type=d.T.object)]),
  withLogDeliveryMixin(logDelivery): { Properties+: { LogDelivery+: logDelivery } },
  '#withPlugins':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins', args=[d.arg(name='plugins', type=d.T.array)]),
  withPlugins(plugins): { Properties+: { Plugins: plugins } },
  '#withPluginsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-plugins', args=[d.arg(name='plugins', type=d.T.array)]),
  withPluginsMixin(plugins): { Properties+: { Plugins+: plugins } },
  '#withServiceExecutionRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-serviceexecutionrolearn', args=[d.arg(name='serviceExecutionRoleArn', type=d.T.string)]),
  withServiceExecutionRoleArn(serviceExecutionRoleArn): { Properties+: { ServiceExecutionRoleArn: serviceExecutionRoleArn } },
  '#withWorkerConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration', args=[d.arg(name='workerConfiguration', type=d.T.object)]),
  withWorkerConfiguration(workerConfiguration): { Properties+: { WorkerConfiguration: workerConfiguration } },
  '#withWorkerConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kafkaconnect-connector.html#cfn-kafkaconnect-connector-workerconfiguration', args=[d.arg(name='workerConfiguration', type=d.T.object)]),
  withWorkerConfigurationMixin(workerConfiguration): { Properties+: { WorkerConfiguration+: workerConfiguration } },
}
