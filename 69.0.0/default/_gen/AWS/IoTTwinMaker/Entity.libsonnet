(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Entity', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::IoTTwinMaker::Entity', Properties: { WorkspaceId: if errorOnEmptyProp then (error 'You need to define WorkspaceId properties for AWS::IoTTwinMaker::Entity resource') else null, EntityName: if errorOnEmptyProp then (error 'You need to define EntityName properties for AWS::IoTTwinMaker::Entity resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withComponents':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-components', args=[d.arg(name='components', type=d.T.object)]),
  withComponents(components): { Properties+: { Components: components } },
  '#withComponentsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-components', args=[d.arg(name='components', type=d.T.object)]),
  withComponentsMixin(components): { Properties+: { Components+: components } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withEntityId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityid', args=[d.arg(name='entityId', type=d.T.string)]),
  withEntityId(entityId): { Properties+: { EntityId: entityId } },
  '#withEntityName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-entityname', args=[d.arg(name='entityName', type=d.T.string)]),
  withEntityName(entityName): { Properties+: { EntityName: entityName } },
  '#withParentEntityId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-parententityid', args=[d.arg(name='parentEntityId', type=d.T.string)]),
  withParentEntityId(parentEntityId): { Properties+: { ParentEntityId: parentEntityId } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withWorkspaceId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-entity.html#cfn-iottwinmaker-entity-workspaceid', args=[d.arg(name='workspaceId', type=d.T.string)]),
  withWorkspaceId(workspaceId): { Properties+: { WorkspaceId: workspaceId } },
}
