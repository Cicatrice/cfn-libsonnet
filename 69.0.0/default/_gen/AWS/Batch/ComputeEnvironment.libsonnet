(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='ComputeEnvironment', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Batch::ComputeEnvironment', Properties: { Type: if errorOnEmptyProp then (error 'You need to define Type properties for AWS::Batch::ComputeEnvironment resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withComputeEnvironmentName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-computeenvironmentname', args=[d.arg(name='computeEnvironmentName', type=d.T.string)]),
  withComputeEnvironmentName(computeEnvironmentName): { Properties+: { ComputeEnvironmentName: computeEnvironmentName } },
  '#withComputeResources':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-computeresources', args=[d.arg(name='computeResources', type=d.T.object)]),
  withComputeResources(computeResources): { Properties+: { ComputeResources: computeResources } },
  '#withComputeResourcesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-computeresources', args=[d.arg(name='computeResources', type=d.T.object)]),
  withComputeResourcesMixin(computeResources): { Properties+: { ComputeResources+: computeResources } },
  '#withReplaceComputeEnvironment':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-replacecomputeenvironment', args=[d.arg(name='replaceComputeEnvironment', type=d.T.bool)]),
  withReplaceComputeEnvironment(replaceComputeEnvironment): { Properties+: { ReplaceComputeEnvironment: replaceComputeEnvironment } },
  '#withServiceRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-servicerole', args=[d.arg(name='serviceRole', type=d.T.string)]),
  withServiceRole(serviceRole): { Properties+: { ServiceRole: serviceRole } },
  '#withState':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-state', args=[d.arg(name='state', type=d.T.string)]),
  withState(state): { Properties+: { State: state } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-type', args=[d.arg(name='type', type=d.T.string)]),
  withType(type): { Properties+: { Type: type } },
  '#withUnmanagedvCpus':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-unmanagedvcpus', args=[d.arg(name='unmanagedvCpus', type=d.T.number)]),
  withUnmanagedvCpus(unmanagedvCpus): { Properties+: { UnmanagedvCpus: unmanagedvCpus } },
  '#withUpdatePolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-updatepolicy', args=[d.arg(name='updatePolicy', type=d.T.object)]),
  withUpdatePolicy(updatePolicy): { Properties+: { UpdatePolicy: updatePolicy } },
  '#withUpdatePolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-batch-computeenvironment.html#cfn-batch-computeenvironment-updatepolicy', args=[d.arg(name='updatePolicy', type=d.T.object)]),
  withUpdatePolicyMixin(updatePolicy): { Properties+: { UpdatePolicy+: updatePolicy } },
}
