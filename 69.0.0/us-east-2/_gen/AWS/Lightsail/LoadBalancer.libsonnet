(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='LoadBalancer', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Lightsail::LoadBalancer', Properties: { InstancePort: if errorOnEmptyProp then (error 'You need to define InstancePort properties for AWS::Lightsail::LoadBalancer resource') else null, LoadBalancerName: if errorOnEmptyProp then (error 'You need to define LoadBalancerName properties for AWS::Lightsail::LoadBalancer resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withAttachedInstances':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-attachedinstances', args=[d.arg(name='attachedInstances', type=d.T.array)]),
  withAttachedInstances(attachedInstances): { Properties+: { AttachedInstances: attachedInstances } },
  '#withAttachedInstancesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-attachedinstances', args=[d.arg(name='attachedInstances', type=d.T.array)]),
  withAttachedInstancesMixin(attachedInstances): { Properties+: { AttachedInstances+: attachedInstances } },
  '#withHealthCheckPath':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-healthcheckpath', args=[d.arg(name='healthCheckPath', type=d.T.string)]),
  withHealthCheckPath(healthCheckPath): { Properties+: { HealthCheckPath: healthCheckPath } },
  '#withInstancePort':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-instanceport', args=[d.arg(name='instancePort', type=d.T.number)]),
  withInstancePort(instancePort): { Properties+: { InstancePort: instancePort } },
  '#withIpAddressType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-ipaddresstype', args=[d.arg(name='ipAddressType', type=d.T.string)]),
  withIpAddressType(ipAddressType): { Properties+: { IpAddressType: ipAddressType } },
  '#withLoadBalancerName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-loadbalancername', args=[d.arg(name='loadBalancerName', type=d.T.string)]),
  withLoadBalancerName(loadBalancerName): { Properties+: { LoadBalancerName: loadBalancerName } },
  '#withSessionStickinessEnabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-sessionstickinessenabled', args=[d.arg(name='sessionStickinessEnabled', type=d.T.bool)]),
  withSessionStickinessEnabled(sessionStickinessEnabled): { Properties+: { SessionStickinessEnabled: sessionStickinessEnabled } },
  '#withSessionStickinessLBCookieDurationSeconds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-sessionstickinesslbcookiedurationseconds', args=[d.arg(name='sessionStickinessLbcookieDurationSeconds', type=d.T.string)]),
  withSessionStickinessLBCookieDurationSeconds(sessionStickinessLbcookieDurationSeconds): { Properties+: { SessionStickinessLBCookieDurationSeconds: sessionStickinessLbcookieDurationSeconds } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-loadbalancer.html#cfn-lightsail-loadbalancer-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
