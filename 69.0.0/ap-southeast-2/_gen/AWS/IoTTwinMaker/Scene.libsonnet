(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Scene', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::IoTTwinMaker::Scene', Properties: { ContentLocation: if errorOnEmptyProp then (error 'You need to define ContentLocation properties for AWS::IoTTwinMaker::Scene resource') else null, SceneId: if errorOnEmptyProp then (error 'You need to define SceneId properties for AWS::IoTTwinMaker::Scene resource') else null, WorkspaceId: if errorOnEmptyProp then (error 'You need to define WorkspaceId properties for AWS::IoTTwinMaker::Scene resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withCapabilities':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities', args=[d.arg(name='capabilities', type=d.T.array)]),
  withCapabilities(capabilities): { Properties+: { Capabilities: capabilities } },
  '#withCapabilitiesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-capabilities', args=[d.arg(name='capabilities', type=d.T.array)]),
  withCapabilitiesMixin(capabilities): { Properties+: { Capabilities+: capabilities } },
  '#withContentLocation':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-contentlocation', args=[d.arg(name='contentLocation', type=d.T.string)]),
  withContentLocation(contentLocation): { Properties+: { ContentLocation: contentLocation } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withSceneId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-sceneid', args=[d.arg(name='sceneId', type=d.T.string)]),
  withSceneId(sceneId): { Properties+: { SceneId: sceneId } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withWorkspaceId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iottwinmaker-scene.html#cfn-iottwinmaker-scene-workspaceid', args=[d.arg(name='workspaceId', type=d.T.string)]),
  withWorkspaceId(workspaceId): { Properties+: { WorkspaceId: workspaceId } },
}
