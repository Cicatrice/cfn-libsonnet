(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Endpoint', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::SageMaker::Endpoint', Properties: { EndpointConfigName: if errorOnEmptyProp then (error 'You need to define EndpointConfigName properties for AWS::SageMaker::Endpoint resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDeploymentConfig':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-deploymentconfig', args=[d.arg(name='deploymentConfig', type=d.T.object)]),
  withDeploymentConfig(deploymentConfig): { Properties+: { DeploymentConfig: deploymentConfig } },
  '#withDeploymentConfigMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-deploymentconfig', args=[d.arg(name='deploymentConfig', type=d.T.object)]),
  withDeploymentConfigMixin(deploymentConfig): { Properties+: { DeploymentConfig+: deploymentConfig } },
  '#withEndpointConfigName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-endpointconfigname', args=[d.arg(name='endpointConfigName', type=d.T.string)]),
  withEndpointConfigName(endpointConfigName): { Properties+: { EndpointConfigName: endpointConfigName } },
  '#withEndpointName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-endpointname', args=[d.arg(name='endpointName', type=d.T.string)]),
  withEndpointName(endpointName): { Properties+: { EndpointName: endpointName } },
  '#withExcludeRetainedVariantProperties':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-excluderetainedvariantproperties', args=[d.arg(name='excludeRetainedVariantProperties', type=d.T.array)]),
  withExcludeRetainedVariantProperties(excludeRetainedVariantProperties): { Properties+: { ExcludeRetainedVariantProperties: excludeRetainedVariantProperties } },
  '#withExcludeRetainedVariantPropertiesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-excluderetainedvariantproperties', args=[d.arg(name='excludeRetainedVariantProperties', type=d.T.array)]),
  withExcludeRetainedVariantPropertiesMixin(excludeRetainedVariantProperties): { Properties+: { ExcludeRetainedVariantProperties+: excludeRetainedVariantProperties } },
  '#withRetainAllVariantProperties':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-retainallvariantproperties', args=[d.arg(name='retainAllVariantProperties', type=d.T.bool)]),
  withRetainAllVariantProperties(retainAllVariantProperties): { Properties+: { RetainAllVariantProperties: retainAllVariantProperties } },
  '#withRetainDeploymentConfig':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-retaindeploymentconfig', args=[d.arg(name='retainDeploymentConfig', type=d.T.bool)]),
  withRetainDeploymentConfig(retainDeploymentConfig): { Properties+: { RetainDeploymentConfig: retainDeploymentConfig } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-sagemaker-endpoint.html#cfn-sagemaker-endpoint-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
