(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Service', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::ECS::Service', Properties: {} },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withCapacityProviderStrategy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy', args=[d.arg(name='capacityProviderStrategy', type=d.T.array)]),
  withCapacityProviderStrategy(capacityProviderStrategy): { Properties+: { CapacityProviderStrategy: capacityProviderStrategy } },
  '#withCapacityProviderStrategyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-capacityproviderstrategy', args=[d.arg(name='capacityProviderStrategy', type=d.T.array)]),
  withCapacityProviderStrategyMixin(capacityProviderStrategy): { Properties+: { CapacityProviderStrategy+: capacityProviderStrategy } },
  '#withCluster':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-cluster', args=[d.arg(name='cluster', type=d.T.string)]),
  withCluster(cluster): { Properties+: { Cluster: cluster } },
  '#withDeploymentConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration', args=[d.arg(name='deploymentConfiguration', type=d.T.object)]),
  withDeploymentConfiguration(deploymentConfiguration): { Properties+: { DeploymentConfiguration: deploymentConfiguration } },
  '#withDeploymentConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentconfiguration', args=[d.arg(name='deploymentConfiguration', type=d.T.object)]),
  withDeploymentConfigurationMixin(deploymentConfiguration): { Properties+: { DeploymentConfiguration+: deploymentConfiguration } },
  '#withDeploymentController':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentcontroller', args=[d.arg(name='deploymentController', type=d.T.object)]),
  withDeploymentController(deploymentController): { Properties+: { DeploymentController: deploymentController } },
  '#withDeploymentControllerMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-deploymentcontroller', args=[d.arg(name='deploymentController', type=d.T.object)]),
  withDeploymentControllerMixin(deploymentController): { Properties+: { DeploymentController+: deploymentController } },
  '#withDesiredCount':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-desiredcount', args=[d.arg(name='desiredCount', type=d.T.number)]),
  withDesiredCount(desiredCount): { Properties+: { DesiredCount: desiredCount } },
  '#withEnableECSManagedTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableecsmanagedtags', args=[d.arg(name='enableEcsmanagedTags', type=d.T.bool)]),
  withEnableECSManagedTags(enableEcsmanagedTags): { Properties+: { EnableECSManagedTags: enableEcsmanagedTags } },
  '#withEnableExecuteCommand':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-enableexecutecommand', args=[d.arg(name='enableExecuteCommand', type=d.T.bool)]),
  withEnableExecuteCommand(enableExecuteCommand): { Properties+: { EnableExecuteCommand: enableExecuteCommand } },
  '#withHealthCheckGracePeriodSeconds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-healthcheckgraceperiodseconds', args=[d.arg(name='healthCheckGracePeriodSeconds', type=d.T.number)]),
  withHealthCheckGracePeriodSeconds(healthCheckGracePeriodSeconds): { Properties+: { HealthCheckGracePeriodSeconds: healthCheckGracePeriodSeconds } },
  '#withLaunchType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-launchtype', args=[d.arg(name='launchType', type=d.T.string)]),
  withLaunchType(launchType): { Properties+: { LaunchType: launchType } },
  '#withLoadBalancers':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers', args=[d.arg(name='loadBalancers', type=d.T.array)]),
  withLoadBalancers(loadBalancers): { Properties+: { LoadBalancers: loadBalancers } },
  '#withLoadBalancersMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-loadbalancers', args=[d.arg(name='loadBalancers', type=d.T.array)]),
  withLoadBalancersMixin(loadBalancers): { Properties+: { LoadBalancers+: loadBalancers } },
  '#withNetworkConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfiguration(networkConfiguration): { Properties+: { NetworkConfiguration: networkConfiguration } },
  '#withNetworkConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfigurationMixin(networkConfiguration): { Properties+: { NetworkConfiguration+: networkConfiguration } },
  '#withPlacementConstraints':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints', args=[d.arg(name='placementConstraints', type=d.T.array)]),
  withPlacementConstraints(placementConstraints): { Properties+: { PlacementConstraints: placementConstraints } },
  '#withPlacementConstraintsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementconstraints', args=[d.arg(name='placementConstraints', type=d.T.array)]),
  withPlacementConstraintsMixin(placementConstraints): { Properties+: { PlacementConstraints+: placementConstraints } },
  '#withPlacementStrategies':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies', args=[d.arg(name='placementStrategies', type=d.T.array)]),
  withPlacementStrategies(placementStrategies): { Properties+: { PlacementStrategies: placementStrategies } },
  '#withPlacementStrategiesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-placementstrategies', args=[d.arg(name='placementStrategies', type=d.T.array)]),
  withPlacementStrategiesMixin(placementStrategies): { Properties+: { PlacementStrategies+: placementStrategies } },
  '#withPlatformVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-platformversion', args=[d.arg(name='platformVersion', type=d.T.string)]),
  withPlatformVersion(platformVersion): { Properties+: { PlatformVersion: platformVersion } },
  '#withPropagateTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-propagatetags', args=[d.arg(name='propagateTags', type=d.T.string)]),
  withPropagateTags(propagateTags): { Properties+: { PropagateTags: propagateTags } },
  '#withRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-role', args=[d.arg(name='role', type=d.T.string)]),
  withRole(role): { Properties+: { Role: role } },
  '#withSchedulingStrategy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-schedulingstrategy', args=[d.arg(name='schedulingStrategy', type=d.T.string)]),
  withSchedulingStrategy(schedulingStrategy): { Properties+: { SchedulingStrategy: schedulingStrategy } },
  '#withServiceName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-servicename', args=[d.arg(name='serviceName', type=d.T.string)]),
  withServiceName(serviceName): { Properties+: { ServiceName: serviceName } },
  '#withServiceRegistries':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries', args=[d.arg(name='serviceRegistries', type=d.T.array)]),
  withServiceRegistries(serviceRegistries): { Properties+: { ServiceRegistries: serviceRegistries } },
  '#withServiceRegistriesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-serviceregistries', args=[d.arg(name='serviceRegistries', type=d.T.array)]),
  withServiceRegistriesMixin(serviceRegistries): { Properties+: { ServiceRegistries+: serviceRegistries } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withTaskDefinition':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ecs-service.html#cfn-ecs-service-taskdefinition', args=[d.arg(name='taskDefinition', type=d.T.string)]),
  withTaskDefinition(taskDefinition): { Properties+: { TaskDefinition: taskDefinition } },
}
