(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Feature', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Evidently::Feature', Properties: { Project: if errorOnEmptyProp then (error 'You need to define Project properties for AWS::Evidently::Feature resource') else null, Variations: if errorOnEmptyProp then (error 'You need to define Variations properties for AWS::Evidently::Feature resource') else null, Name: if errorOnEmptyProp then (error 'You need to define Name properties for AWS::Evidently::Feature resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDefaultVariation':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-defaultvariation', args=[d.arg(name='defaultVariation', type=d.T.string)]),
  withDefaultVariation(defaultVariation): { Properties+: { DefaultVariation: defaultVariation } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withEntityOverrides':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-entityoverrides', args=[d.arg(name='entityOverrides', type=d.T.array)]),
  withEntityOverrides(entityOverrides): { Properties+: { EntityOverrides: entityOverrides } },
  '#withEntityOverridesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-entityoverrides', args=[d.arg(name='entityOverrides', type=d.T.array)]),
  withEntityOverridesMixin(entityOverrides): { Properties+: { EntityOverrides+: entityOverrides } },
  '#withEvaluationStrategy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-evaluationstrategy', args=[d.arg(name='evaluationStrategy', type=d.T.string)]),
  withEvaluationStrategy(evaluationStrategy): { Properties+: { EvaluationStrategy: evaluationStrategy } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withProject':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-project', args=[d.arg(name='project', type=d.T.string)]),
  withProject(project): { Properties+: { Project: project } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withVariations':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-variations', args=[d.arg(name='variations', type=d.T.array)]),
  withVariations(variations): { Properties+: { Variations: variations } },
  '#withVariationsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-evidently-feature.html#cfn-evidently-feature-variations', args=[d.arg(name='variations', type=d.T.array)]),
  withVariationsMixin(variations): { Properties+: { Variations+: variations } },
}
