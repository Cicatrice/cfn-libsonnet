(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='TargetGroup', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::ElasticLoadBalancingV2::TargetGroup', Properties: {} },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withHealthCheckEnabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckenabled', args=[d.arg(name='healthCheckEnabled', type=d.T.bool)]),
  withHealthCheckEnabled(healthCheckEnabled): { Properties+: { HealthCheckEnabled: healthCheckEnabled } },
  '#withHealthCheckIntervalSeconds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckintervalseconds', args=[d.arg(name='healthCheckIntervalSeconds', type=d.T.number)]),
  withHealthCheckIntervalSeconds(healthCheckIntervalSeconds): { Properties+: { HealthCheckIntervalSeconds: healthCheckIntervalSeconds } },
  '#withHealthCheckPath':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckpath', args=[d.arg(name='healthCheckPath', type=d.T.string)]),
  withHealthCheckPath(healthCheckPath): { Properties+: { HealthCheckPath: healthCheckPath } },
  '#withHealthCheckPort':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckport', args=[d.arg(name='healthCheckPort', type=d.T.string)]),
  withHealthCheckPort(healthCheckPort): { Properties+: { HealthCheckPort: healthCheckPort } },
  '#withHealthCheckProtocol':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthcheckprotocol', args=[d.arg(name='healthCheckProtocol', type=d.T.string)]),
  withHealthCheckProtocol(healthCheckProtocol): { Properties+: { HealthCheckProtocol: healthCheckProtocol } },
  '#withHealthCheckTimeoutSeconds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthchecktimeoutseconds', args=[d.arg(name='healthCheckTimeoutSeconds', type=d.T.number)]),
  withHealthCheckTimeoutSeconds(healthCheckTimeoutSeconds): { Properties+: { HealthCheckTimeoutSeconds: healthCheckTimeoutSeconds } },
  '#withHealthyThresholdCount':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-healthythresholdcount', args=[d.arg(name='healthyThresholdCount', type=d.T.number)]),
  withHealthyThresholdCount(healthyThresholdCount): { Properties+: { HealthyThresholdCount: healthyThresholdCount } },
  '#withIpAddressType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-ipaddresstype', args=[d.arg(name='ipAddressType', type=d.T.string)]),
  withIpAddressType(ipAddressType): { Properties+: { IpAddressType: ipAddressType } },
  '#withMatcher':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher', args=[d.arg(name='matcher', type=d.T.object)]),
  withMatcher(matcher): { Properties+: { Matcher: matcher } },
  '#withMatcherMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-matcher', args=[d.arg(name='matcher', type=d.T.object)]),
  withMatcherMixin(matcher): { Properties+: { Matcher+: matcher } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withPort':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-port', args=[d.arg(name='port', type=d.T.number)]),
  withPort(port): { Properties+: { Port: port } },
  '#withProtocol':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocol', args=[d.arg(name='protocol', type=d.T.string)]),
  withProtocol(protocol): { Properties+: { Protocol: protocol } },
  '#withProtocolVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-protocolversion', args=[d.arg(name='protocolVersion', type=d.T.string)]),
  withProtocolVersion(protocolVersion): { Properties+: { ProtocolVersion: protocolVersion } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withTargetGroupAttributes':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes', args=[d.arg(name='targetGroupAttributes', type=d.T.array)]),
  withTargetGroupAttributes(targetGroupAttributes): { Properties+: { TargetGroupAttributes: targetGroupAttributes } },
  '#withTargetGroupAttributesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targetgroupattributes', args=[d.arg(name='targetGroupAttributes', type=d.T.array)]),
  withTargetGroupAttributesMixin(targetGroupAttributes): { Properties+: { TargetGroupAttributes+: targetGroupAttributes } },
  '#withTargetType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targettype', args=[d.arg(name='targetType', type=d.T.string)]),
  withTargetType(targetType): { Properties+: { TargetType: targetType } },
  '#withTargets':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets', args=[d.arg(name='targets', type=d.T.array)]),
  withTargets(targets): { Properties+: { Targets: targets } },
  '#withTargetsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-targets', args=[d.arg(name='targets', type=d.T.array)]),
  withTargetsMixin(targets): { Properties+: { Targets+: targets } },
  '#withUnhealthyThresholdCount':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-unhealthythresholdcount', args=[d.arg(name='unhealthyThresholdCount', type=d.T.number)]),
  withUnhealthyThresholdCount(unhealthyThresholdCount): { Properties+: { UnhealthyThresholdCount: unhealthyThresholdCount } },
  '#withVpcId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-elasticloadbalancingv2-targetgroup.html#cfn-elasticloadbalancingv2-targetgroup-vpcid', args=[d.arg(name='vpcId', type=d.T.string)]),
  withVpcId(vpcId): { Properties+: { VpcId: vpcId } },
}
