(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='EventSubscription', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Redshift::EventSubscription', Properties: { SubscriptionName: if errorOnEmptyProp then (error 'You need to define SubscriptionName properties for AWS::Redshift::EventSubscription resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withEnabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-enabled', args=[d.arg(name='enabled', type=d.T.bool)]),
  withEnabled(enabled): { Properties+: { Enabled: enabled } },
  '#withEventCategories':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-eventcategories', args=[d.arg(name='eventCategories', type=d.T.array)]),
  withEventCategories(eventCategories): { Properties+: { EventCategories: eventCategories } },
  '#withEventCategoriesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-eventcategories', args=[d.arg(name='eventCategories', type=d.T.array)]),
  withEventCategoriesMixin(eventCategories): { Properties+: { EventCategories+: eventCategories } },
  '#withSeverity':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-severity', args=[d.arg(name='severity', type=d.T.string)]),
  withSeverity(severity): { Properties+: { Severity: severity } },
  '#withSnsTopicArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-snstopicarn', args=[d.arg(name='snsTopicArn', type=d.T.string)]),
  withSnsTopicArn(snsTopicArn): { Properties+: { SnsTopicArn: snsTopicArn } },
  '#withSourceIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourceids', args=[d.arg(name='sourceIds', type=d.T.array)]),
  withSourceIds(sourceIds): { Properties+: { SourceIds: sourceIds } },
  '#withSourceIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourceids', args=[d.arg(name='sourceIds', type=d.T.array)]),
  withSourceIdsMixin(sourceIds): { Properties+: { SourceIds+: sourceIds } },
  '#withSourceType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-sourcetype', args=[d.arg(name='sourceType', type=d.T.string)]),
  withSourceType(sourceType): { Properties+: { SourceType: sourceType } },
  '#withSubscriptionName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-subscriptionname', args=[d.arg(name='subscriptionName', type=d.T.string)]),
  withSubscriptionName(subscriptionName): { Properties+: { SubscriptionName: subscriptionName } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-redshift-eventsubscription.html#cfn-redshift-eventsubscription-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
