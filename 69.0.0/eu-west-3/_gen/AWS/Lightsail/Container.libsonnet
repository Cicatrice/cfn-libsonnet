(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Container', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Lightsail::Container', Properties: { Scale: if errorOnEmptyProp then (error 'You need to define Scale properties for AWS::Lightsail::Container resource') else null, ServiceName: if errorOnEmptyProp then (error 'You need to define ServiceName properties for AWS::Lightsail::Container resource') else null, Power: if errorOnEmptyProp then (error 'You need to define Power properties for AWS::Lightsail::Container resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withContainerServiceDeployment':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-containerservicedeployment', args=[d.arg(name='containerServiceDeployment', type=d.T.object)]),
  withContainerServiceDeployment(containerServiceDeployment): { Properties+: { ContainerServiceDeployment: containerServiceDeployment } },
  '#withContainerServiceDeploymentMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-containerservicedeployment', args=[d.arg(name='containerServiceDeployment', type=d.T.object)]),
  withContainerServiceDeploymentMixin(containerServiceDeployment): { Properties+: { ContainerServiceDeployment+: containerServiceDeployment } },
  '#withIsDisabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-isdisabled', args=[d.arg(name='isDisabled', type=d.T.bool)]),
  withIsDisabled(isDisabled): { Properties+: { IsDisabled: isDisabled } },
  '#withPower':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-power', args=[d.arg(name='power', type=d.T.string)]),
  withPower(power): { Properties+: { Power: power } },
  '#withPublicDomainNames':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-publicdomainnames', args=[d.arg(name='publicDomainNames', type=d.T.array)]),
  withPublicDomainNames(publicDomainNames): { Properties+: { PublicDomainNames: publicDomainNames } },
  '#withPublicDomainNamesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-publicdomainnames', args=[d.arg(name='publicDomainNames', type=d.T.array)]),
  withPublicDomainNamesMixin(publicDomainNames): { Properties+: { PublicDomainNames+: publicDomainNames } },
  '#withScale':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-scale', args=[d.arg(name='scale', type=d.T.number)]),
  withScale(scale): { Properties+: { Scale: scale } },
  '#withServiceName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-servicename', args=[d.arg(name='serviceName', type=d.T.string)]),
  withServiceName(serviceName): { Properties+: { ServiceName: serviceName } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lightsail-container.html#cfn-lightsail-container-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
