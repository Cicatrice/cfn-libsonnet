(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='EC2Fleet', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::EC2::EC2Fleet', Properties: { TargetCapacitySpecification: if errorOnEmptyProp then (error 'You need to define TargetCapacitySpecification properties for AWS::EC2::EC2Fleet resource') else null, LaunchTemplateConfigs: if errorOnEmptyProp then (error 'You need to define LaunchTemplateConfigs properties for AWS::EC2::EC2Fleet resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withContext':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-context', args=[d.arg(name='context', type=d.T.string)]),
  withContext(context): { Properties+: { Context: context } },
  '#withExcessCapacityTerminationPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-excesscapacityterminationpolicy', args=[d.arg(name='excessCapacityTerminationPolicy', type=d.T.string)]),
  withExcessCapacityTerminationPolicy(excessCapacityTerminationPolicy): { Properties+: { ExcessCapacityTerminationPolicy: excessCapacityTerminationPolicy } },
  '#withLaunchTemplateConfigs':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs', args=[d.arg(name='launchTemplateConfigs', type=d.T.array)]),
  withLaunchTemplateConfigs(launchTemplateConfigs): { Properties+: { LaunchTemplateConfigs: launchTemplateConfigs } },
  '#withLaunchTemplateConfigsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-launchtemplateconfigs', args=[d.arg(name='launchTemplateConfigs', type=d.T.array)]),
  withLaunchTemplateConfigsMixin(launchTemplateConfigs): { Properties+: { LaunchTemplateConfigs+: launchTemplateConfigs } },
  '#withOnDemandOptions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions', args=[d.arg(name='onDemandOptions', type=d.T.object)]),
  withOnDemandOptions(onDemandOptions): { Properties+: { OnDemandOptions: onDemandOptions } },
  '#withOnDemandOptionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-ondemandoptions', args=[d.arg(name='onDemandOptions', type=d.T.object)]),
  withOnDemandOptionsMixin(onDemandOptions): { Properties+: { OnDemandOptions+: onDemandOptions } },
  '#withReplaceUnhealthyInstances':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-replaceunhealthyinstances', args=[d.arg(name='replaceUnhealthyInstances', type=d.T.bool)]),
  withReplaceUnhealthyInstances(replaceUnhealthyInstances): { Properties+: { ReplaceUnhealthyInstances: replaceUnhealthyInstances } },
  '#withSpotOptions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions', args=[d.arg(name='spotOptions', type=d.T.object)]),
  withSpotOptions(spotOptions): { Properties+: { SpotOptions: spotOptions } },
  '#withSpotOptionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-spotoptions', args=[d.arg(name='spotOptions', type=d.T.object)]),
  withSpotOptionsMixin(spotOptions): { Properties+: { SpotOptions+: spotOptions } },
  '#withTagSpecifications':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications', args=[d.arg(name='tagSpecifications', type=d.T.array)]),
  withTagSpecifications(tagSpecifications): { Properties+: { TagSpecifications: tagSpecifications } },
  '#withTagSpecificationsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-tagspecifications', args=[d.arg(name='tagSpecifications', type=d.T.array)]),
  withTagSpecificationsMixin(tagSpecifications): { Properties+: { TagSpecifications+: tagSpecifications } },
  '#withTargetCapacitySpecification':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification', args=[d.arg(name='targetCapacitySpecification', type=d.T.object)]),
  withTargetCapacitySpecification(targetCapacitySpecification): { Properties+: { TargetCapacitySpecification: targetCapacitySpecification } },
  '#withTargetCapacitySpecificationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-targetcapacityspecification', args=[d.arg(name='targetCapacitySpecification', type=d.T.object)]),
  withTargetCapacitySpecificationMixin(targetCapacitySpecification): { Properties+: { TargetCapacitySpecification+: targetCapacitySpecification } },
  '#withTerminateInstancesWithExpiration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-terminateinstanceswithexpiration', args=[d.arg(name='terminateInstancesWithExpiration', type=d.T.bool)]),
  withTerminateInstancesWithExpiration(terminateInstancesWithExpiration): { Properties+: { TerminateInstancesWithExpiration: terminateInstancesWithExpiration } },
  '#withType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-type', args=[d.arg(name='type', type=d.T.string)]),
  withType(type): { Properties+: { Type: type } },
  '#withValidFrom':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validfrom', args=[d.arg(name='validFrom', type=d.T.string)]),
  withValidFrom(validFrom): { Properties+: { ValidFrom: validFrom } },
  '#withValidUntil':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-ec2fleet.html#cfn-ec2-ec2fleet-validuntil', args=[d.arg(name='validUntil', type=d.T.string)]),
  withValidUntil(validUntil): { Properties+: { ValidUntil: validUntil } },
}
