(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='DBProxyEndpoint', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::RDS::DBProxyEndpoint', Properties: { DBProxyName: if errorOnEmptyProp then (error 'You need to define DBProxyName properties for AWS::RDS::DBProxyEndpoint resource') else null, VpcSubnetIds: if errorOnEmptyProp then (error 'You need to define VpcSubnetIds properties for AWS::RDS::DBProxyEndpoint resource') else null, DBProxyEndpointName: if errorOnEmptyProp then (error 'You need to define DBProxyEndpointName properties for AWS::RDS::DBProxyEndpoint resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDBProxyEndpointName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-dbproxyendpointname', args=[d.arg(name='dbproxyEndpointName', type=d.T.string)]),
  withDBProxyEndpointName(dbproxyEndpointName): { Properties+: { DBProxyEndpointName: dbproxyEndpointName } },
  '#withDBProxyName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-dbproxyname', args=[d.arg(name='dbproxyName', type=d.T.string)]),
  withDBProxyName(dbproxyName): { Properties+: { DBProxyName: dbproxyName } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withTargetRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-targetrole', args=[d.arg(name='targetRole', type=d.T.string)]),
  withTargetRole(targetRole): { Properties+: { TargetRole: targetRole } },
  '#withVpcSecurityGroupIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsecuritygroupids', args=[d.arg(name='vpcSecurityGroupIds', type=d.T.array)]),
  withVpcSecurityGroupIds(vpcSecurityGroupIds): { Properties+: { VpcSecurityGroupIds: vpcSecurityGroupIds } },
  '#withVpcSecurityGroupIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsecuritygroupids', args=[d.arg(name='vpcSecurityGroupIds', type=d.T.array)]),
  withVpcSecurityGroupIdsMixin(vpcSecurityGroupIds): { Properties+: { VpcSecurityGroupIds+: vpcSecurityGroupIds } },
  '#withVpcSubnetIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsubnetids', args=[d.arg(name='vpcSubnetIds', type=d.T.array)]),
  withVpcSubnetIds(vpcSubnetIds): { Properties+: { VpcSubnetIds: vpcSubnetIds } },
  '#withVpcSubnetIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-rds-dbproxyendpoint.html#cfn-rds-dbproxyendpoint-vpcsubnetids', args=[d.arg(name='vpcSubnetIds', type=d.T.array)]),
  withVpcSubnetIdsMixin(vpcSubnetIds): { Properties+: { VpcSubnetIds+: vpcSubnetIds } },
}
