(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Application', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::KinesisAnalyticsV2::Application', Properties: { RuntimeEnvironment: if errorOnEmptyProp then (error 'You need to define RuntimeEnvironment properties for AWS::KinesisAnalyticsV2::Application resource') else null, ServiceExecutionRole: if errorOnEmptyProp then (error 'You need to define ServiceExecutionRole properties for AWS::KinesisAnalyticsV2::Application resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withApplicationConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationconfiguration', args=[d.arg(name='applicationConfiguration', type=d.T.object)]),
  withApplicationConfiguration(applicationConfiguration): { Properties+: { ApplicationConfiguration: applicationConfiguration } },
  '#withApplicationConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationconfiguration', args=[d.arg(name='applicationConfiguration', type=d.T.object)]),
  withApplicationConfigurationMixin(applicationConfiguration): { Properties+: { ApplicationConfiguration+: applicationConfiguration } },
  '#withApplicationDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationdescription', args=[d.arg(name='applicationDescription', type=d.T.string)]),
  withApplicationDescription(applicationDescription): { Properties+: { ApplicationDescription: applicationDescription } },
  '#withApplicationMode':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationmode', args=[d.arg(name='applicationMode', type=d.T.string)]),
  withApplicationMode(applicationMode): { Properties+: { ApplicationMode: applicationMode } },
  '#withApplicationName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-applicationname', args=[d.arg(name='applicationName', type=d.T.string)]),
  withApplicationName(applicationName): { Properties+: { ApplicationName: applicationName } },
  '#withRuntimeEnvironment':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-runtimeenvironment', args=[d.arg(name='runtimeEnvironment', type=d.T.string)]),
  withRuntimeEnvironment(runtimeEnvironment): { Properties+: { RuntimeEnvironment: runtimeEnvironment } },
  '#withServiceExecutionRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-serviceexecutionrole', args=[d.arg(name='serviceExecutionRole', type=d.T.string)]),
  withServiceExecutionRole(serviceExecutionRole): { Properties+: { ServiceExecutionRole: serviceExecutionRole } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-kinesisanalyticsv2-application.html#cfn-kinesisanalyticsv2-application-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
