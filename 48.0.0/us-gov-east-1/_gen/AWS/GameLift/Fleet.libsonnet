(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Fleet', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::GameLift::Fleet', Properties: { Name: if errorOnEmptyProp then (error 'You need to define Name properties for AWS::GameLift::Fleet resource') else null, EC2InstanceType: if errorOnEmptyProp then (error 'You need to define EC2InstanceType properties for AWS::GameLift::Fleet resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withBuildId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-buildid', args=[d.arg(name='buildId', type=d.T.string)]),
  withBuildId(buildId): { Properties+: { BuildId: buildId } },
  '#withCertificateConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-certificateconfiguration', args=[d.arg(name='certificateConfiguration', type=d.T.object)]),
  withCertificateConfiguration(certificateConfiguration): { Properties+: { CertificateConfiguration: certificateConfiguration } },
  '#withCertificateConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-certificateconfiguration', args=[d.arg(name='certificateConfiguration', type=d.T.object)]),
  withCertificateConfigurationMixin(certificateConfiguration): { Properties+: { CertificateConfiguration+: certificateConfiguration } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withDesiredEC2Instances':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-desiredec2instances', args=[d.arg(name='desiredEc2instances', type=d.T.number)]),
  withDesiredEC2Instances(desiredEc2instances): { Properties+: { DesiredEC2Instances: desiredEc2instances } },
  '#withEC2InboundPermissions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2inboundpermissions', args=[d.arg(name='ec2inboundPermissions', type=d.T.array)]),
  withEC2InboundPermissions(ec2inboundPermissions): { Properties+: { EC2InboundPermissions: ec2inboundPermissions } },
  '#withEC2InboundPermissionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2inboundpermissions', args=[d.arg(name='ec2inboundPermissions', type=d.T.array)]),
  withEC2InboundPermissionsMixin(ec2inboundPermissions): { Properties+: { EC2InboundPermissions+: ec2inboundPermissions } },
  '#withEC2InstanceType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-ec2instancetype', args=[d.arg(name='ec2instanceType', type=d.T.string)]),
  withEC2InstanceType(ec2instanceType): { Properties+: { EC2InstanceType: ec2instanceType } },
  '#withFleetType':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-fleettype', args=[d.arg(name='fleetType', type=d.T.string)]),
  withFleetType(fleetType): { Properties+: { FleetType: fleetType } },
  '#withInstanceRoleARN':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-instancerolearn', args=[d.arg(name='instanceRoleArn', type=d.T.string)]),
  withInstanceRoleARN(instanceRoleArn): { Properties+: { InstanceRoleARN: instanceRoleArn } },
  '#withLogPaths':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-logpaths', args=[d.arg(name='logPaths', type=d.T.array)]),
  withLogPaths(logPaths): { Properties+: { LogPaths: logPaths } },
  '#withLogPathsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-logpaths', args=[d.arg(name='logPaths', type=d.T.array)]),
  withLogPathsMixin(logPaths): { Properties+: { LogPaths+: logPaths } },
  '#withMaxSize':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-maxsize', args=[d.arg(name='maxSize', type=d.T.number)]),
  withMaxSize(maxSize): { Properties+: { MaxSize: maxSize } },
  '#withMetricGroups':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-metricgroups', args=[d.arg(name='metricGroups', type=d.T.array)]),
  withMetricGroups(metricGroups): { Properties+: { MetricGroups: metricGroups } },
  '#withMetricGroupsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-metricgroups', args=[d.arg(name='metricGroups', type=d.T.array)]),
  withMetricGroupsMixin(metricGroups): { Properties+: { MetricGroups+: metricGroups } },
  '#withMinSize':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-minsize', args=[d.arg(name='minSize', type=d.T.number)]),
  withMinSize(minSize): { Properties+: { MinSize: minSize } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withNewGameSessionProtectionPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-newgamesessionprotectionpolicy', args=[d.arg(name='newGameSessionProtectionPolicy', type=d.T.string)]),
  withNewGameSessionProtectionPolicy(newGameSessionProtectionPolicy): { Properties+: { NewGameSessionProtectionPolicy: newGameSessionProtectionPolicy } },
  '#withPeerVpcAwsAccountId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcawsaccountid', args=[d.arg(name='peerVpcAwsAccountId', type=d.T.string)]),
  withPeerVpcAwsAccountId(peerVpcAwsAccountId): { Properties+: { PeerVpcAwsAccountId: peerVpcAwsAccountId } },
  '#withPeerVpcId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-peervpcid', args=[d.arg(name='peerVpcId', type=d.T.string)]),
  withPeerVpcId(peerVpcId): { Properties+: { PeerVpcId: peerVpcId } },
  '#withResourceCreationLimitPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-resourcecreationlimitpolicy', args=[d.arg(name='resourceCreationLimitPolicy', type=d.T.object)]),
  withResourceCreationLimitPolicy(resourceCreationLimitPolicy): { Properties+: { ResourceCreationLimitPolicy: resourceCreationLimitPolicy } },
  '#withResourceCreationLimitPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-resourcecreationlimitpolicy', args=[d.arg(name='resourceCreationLimitPolicy', type=d.T.object)]),
  withResourceCreationLimitPolicyMixin(resourceCreationLimitPolicy): { Properties+: { ResourceCreationLimitPolicy+: resourceCreationLimitPolicy } },
  '#withRuntimeConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-runtimeconfiguration', args=[d.arg(name='runtimeConfiguration', type=d.T.object)]),
  withRuntimeConfiguration(runtimeConfiguration): { Properties+: { RuntimeConfiguration: runtimeConfiguration } },
  '#withRuntimeConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-runtimeconfiguration', args=[d.arg(name='runtimeConfiguration', type=d.T.object)]),
  withRuntimeConfigurationMixin(runtimeConfiguration): { Properties+: { RuntimeConfiguration+: runtimeConfiguration } },
  '#withScriptId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-scriptid', args=[d.arg(name='scriptId', type=d.T.string)]),
  withScriptId(scriptId): { Properties+: { ScriptId: scriptId } },
  '#withServerLaunchParameters':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-serverlaunchparameters', args=[d.arg(name='serverLaunchParameters', type=d.T.string)]),
  withServerLaunchParameters(serverLaunchParameters): { Properties+: { ServerLaunchParameters: serverLaunchParameters } },
  '#withServerLaunchPath':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-gamelift-fleet.html#cfn-gamelift-fleet-serverlaunchpath', args=[d.arg(name='serverLaunchPath', type=d.T.string)]),
  withServerLaunchPath(serverLaunchPath): { Properties+: { ServerLaunchPath: serverLaunchPath } },
}
