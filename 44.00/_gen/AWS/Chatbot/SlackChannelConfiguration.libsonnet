(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='SlackChannelConfiguration', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Chatbot::SlackChannelConfiguration', Properties: { IamRoleArn: if errorOnEmptyProp then (error 'You need to define IamRoleArn properties for AWS::Chatbot::SlackChannelConfiguration resource') else null, SlackWorkspaceId: if errorOnEmptyProp then (error 'You need to define SlackWorkspaceId properties for AWS::Chatbot::SlackChannelConfiguration resource') else null, SlackChannelId: if errorOnEmptyProp then (error 'You need to define SlackChannelId properties for AWS::Chatbot::SlackChannelConfiguration resource') else null, ConfigurationName: if errorOnEmptyProp then (error 'You need to define ConfigurationName properties for AWS::Chatbot::SlackChannelConfiguration resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withConfigurationName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-configurationname', args=[d.arg(name='configurationName', type=d.T.string)]),
  withConfigurationName(configurationName): { Properties+: { ConfigurationName: configurationName } },
  '#withIamRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-iamrolearn', args=[d.arg(name='iamRoleArn', type=d.T.string)]),
  withIamRoleArn(iamRoleArn): { Properties+: { IamRoleArn: iamRoleArn } },
  '#withLoggingLevel':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-logginglevel', args=[d.arg(name='loggingLevel', type=d.T.string)]),
  withLoggingLevel(loggingLevel): { Properties+: { LoggingLevel: loggingLevel } },
  '#withSlackChannelId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackchannelid', args=[d.arg(name='slackChannelId', type=d.T.string)]),
  withSlackChannelId(slackChannelId): { Properties+: { SlackChannelId: slackChannelId } },
  '#withSlackWorkspaceId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-slackworkspaceid', args=[d.arg(name='slackWorkspaceId', type=d.T.string)]),
  withSlackWorkspaceId(slackWorkspaceId): { Properties+: { SlackWorkspaceId: slackWorkspaceId } },
  '#withSnsTopicArns':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns', args=[d.arg(name='snsTopicArns', type=d.T.array)]),
  withSnsTopicArns(snsTopicArns): { Properties+: { SnsTopicArns: snsTopicArns } },
  '#withSnsTopicArnsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-chatbot-slackchannelconfiguration.html#cfn-chatbot-slackchannelconfiguration-snstopicarns', args=[d.arg(name='snsTopicArns', type=d.T.array)]),
  withSnsTopicArnsMixin(snsTopicArns): { Properties+: { SnsTopicArns+: snsTopicArns } },
}
