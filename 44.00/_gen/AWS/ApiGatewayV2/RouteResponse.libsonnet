{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='RouteResponse', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html'),
  '#withApiId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-apiid', args=[d.arg(name='apiId', type=d.T.string)]),
  withApiId(apiId): { Properties+: { ApiId: apiId } },
  '#withModelSelectionExpression':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-modelselectionexpression', args=[d.arg(name='modelSelectionExpression', type=d.T.string)]),
  withModelSelectionExpression(modelSelectionExpression): { Properties+: { ModelSelectionExpression: modelSelectionExpression } },
  '#withResponseModels':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-responsemodels', args=[d.arg(name='responseModels', type=d.T.string)]),
  withResponseModels(responseModels): { Properties+: { ResponseModels: responseModels } },
  '#withResponseParameters':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-responseparameters', args=[d.arg(name='responseParameters', type=d.T.string)]),
  withResponseParameters(responseParameters): { Properties+: { ResponseParameters: responseParameters } },
  '#withRouteId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-routeid', args=[d.arg(name='routeId', type=d.T.string)]),
  withRouteId(routeId): { Properties+: { RouteId: routeId } },
  '#withRouteResponseKey':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-routeresponse.html#cfn-apigatewayv2-routeresponse-routeresponsekey', args=[d.arg(name='routeResponseKey', type=d.T.string)]),
  withRouteResponseKey(routeResponseKey): { Properties+: { RouteResponseKey: routeResponseKey } },
}
