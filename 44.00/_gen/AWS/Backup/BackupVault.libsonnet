{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='BackupVault', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html'),
  '#withAccessPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-accesspolicy', args=[d.arg(name='accessPolicy', type=d.T.string)]),
  withAccessPolicy(accessPolicy): { Properties+: { AccessPolicy: accessPolicy } },
  '#withBackupVaultName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaultname', args=[d.arg(name='backupVaultName', type=d.T.string)]),
  withBackupVaultName(backupVaultName): { Properties+: { BackupVaultName: backupVaultName } },
  '#withBackupVaultTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-backupvaulttags', args=[d.arg(name='backupVaultTags', type=d.T.string)]),
  withBackupVaultTags(backupVaultTags): { Properties+: { BackupVaultTags: backupVaultTags } },
  '#withEncryptionKeyArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-encryptionkeyarn', args=[d.arg(name='encryptionKeyArn', type=d.T.string)]),
  withEncryptionKeyArn(encryptionKeyArn): { Properties+: { EncryptionKeyArn: encryptionKeyArn } },
  '#withLockConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-lockconfiguration', args=[d.arg(name='lockConfiguration', type=d.T.string)]),
  withLockConfiguration(lockConfiguration): { Properties+: { LockConfiguration: lockConfiguration } },
  '#withNotifications':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-backup-backupvault.html#cfn-backup-backupvault-notifications', args=[d.arg(name='notifications', type=d.T.string)]),
  withNotifications(notifications): { Properties+: { Notifications: notifications } },
}
