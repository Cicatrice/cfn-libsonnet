{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='AWS.EC2.Route', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html'),
  '#withCarrierGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-carriergatewayid', args=[d.arg(name='carrierGatewayId', type=d.T.string)]),
  withCarrierGatewayId(carrierGatewayId): { Properties+: { CarrierGatewayId: carrierGatewayId } },
  '#withDestinationCidrBlock':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationcidrblock', args=[d.arg(name='destinationCidrBlock', type=d.T.string)]),
  withDestinationCidrBlock(destinationCidrBlock): { Properties+: { DestinationCidrBlock: destinationCidrBlock } },
  '#withDestinationIpv6CidrBlock':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-destinationipv6cidrblock', args=[d.arg(name='destinationIpv6cidrBlock', type=d.T.string)]),
  withDestinationIpv6CidrBlock(destinationIpv6cidrBlock): { Properties+: { DestinationIpv6CidrBlock: destinationIpv6cidrBlock } },
  '#withEgressOnlyInternetGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-egressonlyinternetgatewayid', args=[d.arg(name='egressOnlyInternetGatewayId', type=d.T.string)]),
  withEgressOnlyInternetGatewayId(egressOnlyInternetGatewayId): { Properties+: { EgressOnlyInternetGatewayId: egressOnlyInternetGatewayId } },
  '#withGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-gatewayid', args=[d.arg(name='gatewayId', type=d.T.string)]),
  withGatewayId(gatewayId): { Properties+: { GatewayId: gatewayId } },
  '#withInstanceId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-instanceid', args=[d.arg(name='instanceId', type=d.T.string)]),
  withInstanceId(instanceId): { Properties+: { InstanceId: instanceId } },
  '#withLocalGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-localgatewayid', args=[d.arg(name='localGatewayId', type=d.T.string)]),
  withLocalGatewayId(localGatewayId): { Properties+: { LocalGatewayId: localGatewayId } },
  '#withNatGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-natgatewayid', args=[d.arg(name='natGatewayId', type=d.T.string)]),
  withNatGatewayId(natGatewayId): { Properties+: { NatGatewayId: natGatewayId } },
  '#withNetworkInterfaceId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-networkinterfaceid', args=[d.arg(name='networkInterfaceId', type=d.T.string)]),
  withNetworkInterfaceId(networkInterfaceId): { Properties+: { NetworkInterfaceId: networkInterfaceId } },
  '#withRouteTableId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-routetableid', args=[d.arg(name='routeTableId', type=d.T.string)]),
  withRouteTableId(routeTableId): { Properties+: { RouteTableId: routeTableId } },
  '#withTransitGatewayId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-transitgatewayid', args=[d.arg(name='transitGatewayId', type=d.T.string)]),
  withTransitGatewayId(transitGatewayId): { Properties+: { TransitGatewayId: transitGatewayId } },
  '#withVpcEndpointId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcendpointid', args=[d.arg(name='vpcEndpointId', type=d.T.string)]),
  withVpcEndpointId(vpcEndpointId): { Properties+: { VpcEndpointId: vpcEndpointId } },
  '#withVpcPeeringConnectionId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-ec2-route.html#cfn-ec2-route-vpcpeeringconnectionid', args=[d.arg(name='vpcPeeringConnectionId', type=d.T.string)]),
  withVpcPeeringConnectionId(vpcPeeringConnectionId): { Properties+: { VpcPeeringConnectionId: vpcPeeringConnectionId } },
}
