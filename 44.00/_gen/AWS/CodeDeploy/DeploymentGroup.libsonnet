{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='DeploymentGroup', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html'),
  '#withAlarmConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-alarmconfiguration', args=[d.arg(name='alarmConfiguration', type=d.T.string)]),
  withAlarmConfiguration(alarmConfiguration): { Properties+: { AlarmConfiguration: alarmConfiguration } },
  '#withApplicationName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-applicationname', args=[d.arg(name='applicationName', type=d.T.string)]),
  withApplicationName(applicationName): { Properties+: { ApplicationName: applicationName } },
  '#withAutoRollbackConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autorollbackconfiguration', args=[d.arg(name='autoRollbackConfiguration', type=d.T.string)]),
  withAutoRollbackConfiguration(autoRollbackConfiguration): { Properties+: { AutoRollbackConfiguration: autoRollbackConfiguration } },
  '#withAutoScalingGroups':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-autoscalinggroups', args=[d.arg(name='autoScalingGroups', type=d.T.string)]),
  withAutoScalingGroups(autoScalingGroups): { Properties+: { AutoScalingGroups: autoScalingGroups } },
  '#withBlueGreenDeploymentConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-bluegreendeploymentconfiguration', args=[d.arg(name='blueGreenDeploymentConfiguration', type=d.T.string)]),
  withBlueGreenDeploymentConfiguration(blueGreenDeploymentConfiguration): { Properties+: { BlueGreenDeploymentConfiguration: blueGreenDeploymentConfiguration } },
  '#withDeployment':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deployment', args=[d.arg(name='deployment', type=d.T.string)]),
  withDeployment(deployment): { Properties+: { Deployment: deployment } },
  '#withDeploymentConfigName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentconfigname', args=[d.arg(name='deploymentConfigName', type=d.T.string)]),
  withDeploymentConfigName(deploymentConfigName): { Properties+: { DeploymentConfigName: deploymentConfigName } },
  '#withDeploymentGroupName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentgroupname', args=[d.arg(name='deploymentGroupName', type=d.T.string)]),
  withDeploymentGroupName(deploymentGroupName): { Properties+: { DeploymentGroupName: deploymentGroupName } },
  '#withDeploymentStyle':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-deploymentstyle', args=[d.arg(name='deploymentStyle', type=d.T.string)]),
  withDeploymentStyle(deploymentStyle): { Properties+: { DeploymentStyle: deploymentStyle } },
  '#withECSServices':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ecsservices', args=[d.arg(name='ecsservices', type=d.T.string)]),
  withECSServices(ecsservices): { Properties+: { ECSServices: ecsservices } },
  '#withEc2TagFilters':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagfilters', args=[d.arg(name='ec2tagFilters', type=d.T.string)]),
  withEc2TagFilters(ec2tagFilters): { Properties+: { Ec2TagFilters: ec2tagFilters } },
  '#withEc2TagSet':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-ec2tagset', args=[d.arg(name='ec2tagSet', type=d.T.string)]),
  withEc2TagSet(ec2tagSet): { Properties+: { Ec2TagSet: ec2tagSet } },
  '#withLoadBalancerInfo':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-loadbalancerinfo', args=[d.arg(name='loadBalancerInfo', type=d.T.string)]),
  withLoadBalancerInfo(loadBalancerInfo): { Properties+: { LoadBalancerInfo: loadBalancerInfo } },
  '#withOnPremisesInstanceTagFilters':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisesinstancetagfilters', args=[d.arg(name='onPremisesInstanceTagFilters', type=d.T.string)]),
  withOnPremisesInstanceTagFilters(onPremisesInstanceTagFilters): { Properties+: { OnPremisesInstanceTagFilters: onPremisesInstanceTagFilters } },
  '#withOnPremisesTagSet':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-onpremisestagset', args=[d.arg(name='onPremisesTagSet', type=d.T.string)]),
  withOnPremisesTagSet(onPremisesTagSet): { Properties+: { OnPremisesTagSet: onPremisesTagSet } },
  '#withServiceRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-servicerolearn', args=[d.arg(name='serviceRoleArn', type=d.T.string)]),
  withServiceRoleArn(serviceRoleArn): { Properties+: { ServiceRoleArn: serviceRoleArn } },
  '#withTriggerConfigurations':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-codedeploy-deploymentgroup.html#cfn-codedeploy-deploymentgroup-triggerconfigurations', args=[d.arg(name='triggerConfigurations', type=d.T.string)]),
  withTriggerConfigurations(triggerConfigurations): { Properties+: { TriggerConfigurations: triggerConfigurations } },
}
