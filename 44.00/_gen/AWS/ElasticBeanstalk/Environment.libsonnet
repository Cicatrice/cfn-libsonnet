(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Environment', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::ElasticBeanstalk::Environment', Properties: { ApplicationName: if errorOnEmptyProp then (error 'You need to define ApplicationName properties for AWS::ElasticBeanstalk::Environment resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withApplicationName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-applicationname', args=[d.arg(name='applicationName', type=d.T.string)]),
  withApplicationName(applicationName): { Properties+: { ApplicationName: applicationName } },
  '#withCNAMEPrefix':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-cnameprefix', args=[d.arg(name='cnameprefix', type=d.T.string)]),
  withCNAMEPrefix(cnameprefix): { Properties+: { CNAMEPrefix: cnameprefix } },
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withEnvironmentName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-name', args=[d.arg(name='environmentName', type=d.T.string)]),
  withEnvironmentName(environmentName): { Properties+: { EnvironmentName: environmentName } },
  '#withOperationsRole':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-operations-role', args=[d.arg(name='operationsRole', type=d.T.string)]),
  withOperationsRole(operationsRole): { Properties+: { OperationsRole: operationsRole } },
  '#withOptionSettings':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-optionsettings', args=[d.arg(name='optionSettings', type=d.T.array)]),
  withOptionSettings(optionSettings): { Properties+: { OptionSettings: optionSettings } },
  '#withOptionSettingsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-optionsettings', args=[d.arg(name='optionSettings', type=d.T.array)]),
  withOptionSettingsMixin(optionSettings): { Properties+: { OptionSettings+: optionSettings } },
  '#withPlatformArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-platformarn', args=[d.arg(name='platformArn', type=d.T.string)]),
  withPlatformArn(platformArn): { Properties+: { PlatformArn: platformArn } },
  '#withSolutionStackName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-solutionstackname', args=[d.arg(name='solutionStackName', type=d.T.string)]),
  withSolutionStackName(solutionStackName): { Properties+: { SolutionStackName: solutionStackName } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-elasticbeanstalk-environment-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-elasticbeanstalk-environment-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withTemplateName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-templatename', args=[d.arg(name='templateName', type=d.T.string)]),
  withTemplateName(templateName): { Properties+: { TemplateName: templateName } },
  '#withTier':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-tier', args=[d.arg(name='tier', type=d.T.object)]),
  withTier(tier): { Properties+: { Tier: tier } },
  '#withTierMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-tier', args=[d.arg(name='tier', type=d.T.object)]),
  withTierMixin(tier): { Properties+: { Tier+: tier } },
  '#withVersionLabel':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-beanstalk-environment.html#cfn-beanstalk-environment-versionlabel', args=[d.arg(name='versionLabel', type=d.T.string)]),
  withVersionLabel(versionLabel): { Properties+: { VersionLabel: versionLabel } },
}
