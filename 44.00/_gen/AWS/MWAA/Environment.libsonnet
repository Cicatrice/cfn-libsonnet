{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Environment', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html'),
  new(): { Type: 'AWS::MWAA::Environment', Properties: { Name: (error 'You need to define Name properties for AWS::MWAA::Environment resource') } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html', args=[]),
  dependsOn(dependencies=[]): { DependsOn: dependencies },
  '#dependsOn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html', args=[d.arg(name='dependencies', type=d.T.array)]),
  dependsOnMixin(dependencies=[]): { DependsOn+: dependencies },
  '#dependsOnMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html', args=[d.arg(name='dependencies', type=d.T.array)]),
  creationPolicy(policy={}): { CreationPolicy: policy },
  '#creationPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  creationPolicyMixin(policy={}): { CreationPolicy+: policy },
  '#creationPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  deletionPolicy(policy={}): { DeletionPolicy: policy },
  '#deletionPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  deletionPolicyMixin(policy={}): { DeletionPolicy+: policy },
  '#deletionPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updatePolicy(policy={}): { UpdatePolicy: policy },
  '#updatePolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updatePolicyMixin(policy={}): { UpdatePolicy+: policy },
  '#updatePolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updateReplacePolicy(policy={}): { UpdateReplacePolicy: policy },
  '#updateReplacePolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updateReplacePolicyMixin(policy={}): { UpdateReplacePolicy+: policy },
  '#updateReplacePolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  metadata(metadatas=[]): { Metadata: metadatas },
  '#metadata':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-metadata.html', args=[d.arg(name='metadatas', type=d.T.object)]),
  metadataMixin(metadatas=[]): { Metadata+: metadatas },
  '#metadataMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-metadata.html', args=[d.arg(name='metadatas', type=d.T.object)]),
  '#withAirflowConfigurationOptions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowconfigurationoptions', args=[d.arg(name='airflowConfigurationOptions', type=d.T.object)]),
  withAirflowConfigurationOptions(airflowConfigurationOptions): { Properties+: { AirflowConfigurationOptions: airflowConfigurationOptions } },
  '#withAirflowConfigurationOptionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowconfigurationoptions', args=[d.arg(name='airflowConfigurationOptions', type=d.T.object)]),
  withAirflowConfigurationOptionsMixin(airflowConfigurationOptions): { Properties+: { AirflowConfigurationOptions+: airflowConfigurationOptions } },
  '#withAirflowVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-airflowversion', args=[d.arg(name='airflowVersion', type=d.T.string)]),
  withAirflowVersion(airflowVersion): { Properties+: { AirflowVersion: airflowVersion } },
  '#withDagS3Path':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-dags3path', args=[d.arg(name='dagS3path', type=d.T.string)]),
  withDagS3Path(dagS3path): { Properties+: { DagS3Path: dagS3path } },
  '#withEnvironmentClass':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-environmentclass', args=[d.arg(name='environmentClass', type=d.T.string)]),
  withEnvironmentClass(environmentClass): { Properties+: { EnvironmentClass: environmentClass } },
  '#withExecutionRoleArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-executionrolearn', args=[d.arg(name='executionRoleArn', type=d.T.string)]),
  withExecutionRoleArn(executionRoleArn): { Properties+: { ExecutionRoleArn: executionRoleArn } },
  '#withKmsKey':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-kmskey', args=[d.arg(name='kmsKey', type=d.T.string)]),
  withKmsKey(kmsKey): { Properties+: { KmsKey: kmsKey } },
  '#withLoggingConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-loggingconfiguration', args=[d.arg(name='loggingConfiguration', type=d.T.object)]),
  withLoggingConfiguration(loggingConfiguration): { Properties+: { LoggingConfiguration: loggingConfiguration } },
  '#withLoggingConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-loggingconfiguration', args=[d.arg(name='loggingConfiguration', type=d.T.object)]),
  withLoggingConfigurationMixin(loggingConfiguration): { Properties+: { LoggingConfiguration+: loggingConfiguration } },
  '#withMaxWorkers':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-maxworkers', args=[d.arg(name='maxWorkers', type=d.T.number)]),
  withMaxWorkers(maxWorkers): { Properties+: { MaxWorkers: maxWorkers } },
  '#withMinWorkers':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-minworkers', args=[d.arg(name='minWorkers', type=d.T.number)]),
  withMinWorkers(minWorkers): { Properties+: { MinWorkers: minWorkers } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withNetworkConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfiguration(networkConfiguration): { Properties+: { NetworkConfiguration: networkConfiguration } },
  '#withNetworkConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-networkconfiguration', args=[d.arg(name='networkConfiguration', type=d.T.object)]),
  withNetworkConfigurationMixin(networkConfiguration): { Properties+: { NetworkConfiguration+: networkConfiguration } },
  '#withPluginsS3ObjectVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3objectversion', args=[d.arg(name='pluginsS3objectVersion', type=d.T.string)]),
  withPluginsS3ObjectVersion(pluginsS3objectVersion): { Properties+: { PluginsS3ObjectVersion: pluginsS3objectVersion } },
  '#withPluginsS3Path':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-pluginss3path', args=[d.arg(name='pluginsS3path', type=d.T.string)]),
  withPluginsS3Path(pluginsS3path): { Properties+: { PluginsS3Path: pluginsS3path } },
  '#withRequirementsS3ObjectVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3objectversion', args=[d.arg(name='requirementsS3objectVersion', type=d.T.string)]),
  withRequirementsS3ObjectVersion(requirementsS3objectVersion): { Properties+: { RequirementsS3ObjectVersion: requirementsS3objectVersion } },
  '#withRequirementsS3Path':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-requirementss3path', args=[d.arg(name='requirementsS3path', type=d.T.string)]),
  withRequirementsS3Path(requirementsS3path): { Properties+: { RequirementsS3Path: requirementsS3path } },
  '#withSchedulers':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-schedulers', args=[d.arg(name='schedulers', type=d.T.number)]),
  withSchedulers(schedulers): { Properties+: { Schedulers: schedulers } },
  '#withSourceBucketArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-sourcebucketarn', args=[d.arg(name='sourceBucketArn', type=d.T.string)]),
  withSourceBucketArn(sourceBucketArn): { Properties+: { SourceBucketArn: sourceBucketArn } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withWebserverAccessMode':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-webserveraccessmode', args=[d.arg(name='webserverAccessMode', type=d.T.string)]),
  withWebserverAccessMode(webserverAccessMode): { Properties+: { WebserverAccessMode: webserverAccessMode } },
  '#withWeeklyMaintenanceWindowStart':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-mwaa-environment.html#cfn-mwaa-environment-weeklymaintenancewindowstart', args=[d.arg(name='weeklyMaintenanceWindowStart', type=d.T.string)]),
  withWeeklyMaintenanceWindowStart(weeklyMaintenanceWindowStart): { Properties+: { WeeklyMaintenanceWindowStart: weeklyMaintenanceWindowStart } },
}
