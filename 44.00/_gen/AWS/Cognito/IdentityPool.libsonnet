{
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='IdentityPool', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html'),
  '#creationPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  creationPolicy(policy={}): { CreationPolicy: policy },
  '#creationPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-creationpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  creationPolicyMixin(policy={}): { CreationPolicy+: policy },
  '#deletionPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  deletionPolicy(policy={}): { DeletionPolicy: policy },
  '#deletionPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  deletionPolicyMixin(policy={}): { DeletionPolicy+: policy },
  '#dependsOn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html', args=[d.arg(name='dependencies', type=d.T.array)]),
  dependsOn(dependencies=[]): { DependsOn: dependencies },
  '#dependsOnMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-dependson.html', args=[d.arg(name='dependencies', type=d.T.array)]),
  dependsOnMixin(dependencies=[]): { DependsOn+: dependencies },
  '#metadata':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-metadata.html', args=[d.arg(name='metadatas', type=d.T.object)]),
  metadata(metadatas=[]): { Metadata: metadatas },
  '#metadataMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-metadata.html', args=[d.arg(name='metadatas', type=d.T.object)]),
  metadataMixin(metadatas=[]): { Metadata+: metadatas },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html', args=[]),
  new(): { Type: 'AWS::Cognito::IdentityPool' },
  '#updatePolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updatePolicy(policy={}): { UpdatePolicy: policy },
  '#updatePolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updatePolicyMixin(policy={}): { UpdatePolicy+: policy },
  '#updateReplacePolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updateReplacePolicy(policy={}): { UpdateReplacePolicy: policy },
  '#updateReplacePolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-updatereplacepolicy.html', args=[d.arg(name='policy', type=d.T.object)]),
  updateReplacePolicyMixin(policy={}): { UpdateReplacePolicy+: policy },
  '#withAllowClassicFlow':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowclassicflow', args=[d.arg(name='allowClassicFlow', type=d.T.string)]),
  withAllowClassicFlow(allowClassicFlow): { Properties+: { AllowClassicFlow: allowClassicFlow } },
  '#withAllowUnauthenticatedIdentities':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-allowunauthenticatedidentities', args=[d.arg(name='allowUnauthenticatedIdentities', type=d.T.string)]),
  withAllowUnauthenticatedIdentities(allowUnauthenticatedIdentities): { Properties+: { AllowUnauthenticatedIdentities: allowUnauthenticatedIdentities } },
  '#withCognitoEvents':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoevents', args=[d.arg(name='cognitoEvents', type=d.T.string)]),
  withCognitoEvents(cognitoEvents): { Properties+: { CognitoEvents: cognitoEvents } },
  '#withCognitoIdentityProviders':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitoidentityproviders', args=[d.arg(name='cognitoIdentityProviders', type=d.T.string)]),
  withCognitoIdentityProviders(cognitoIdentityProviders): { Properties+: { CognitoIdentityProviders: cognitoIdentityProviders } },
  '#withCognitoStreams':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-cognitostreams', args=[d.arg(name='cognitoStreams', type=d.T.string)]),
  withCognitoStreams(cognitoStreams): { Properties+: { CognitoStreams: cognitoStreams } },
  '#withDeveloperProviderName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-developerprovidername', args=[d.arg(name='developerProviderName', type=d.T.string)]),
  withDeveloperProviderName(developerProviderName): { Properties+: { DeveloperProviderName: developerProviderName } },
  '#withIdentityPoolName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-identitypoolname', args=[d.arg(name='identityPoolName', type=d.T.string)]),
  withIdentityPoolName(identityPoolName): { Properties+: { IdentityPoolName: identityPoolName } },
  '#withOpenIdConnectProviderARNs':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-openidconnectproviderarns', args=[d.arg(name='openIdConnectProviderArns', type=d.T.string)]),
  withOpenIdConnectProviderARNs(openIdConnectProviderArns): { Properties+: { OpenIdConnectProviderARNs: openIdConnectProviderArns } },
  '#withPushSync':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-pushsync', args=[d.arg(name='pushSync', type=d.T.string)]),
  withPushSync(pushSync): { Properties+: { PushSync: pushSync } },
  '#withSamlProviderARNs':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-samlproviderarns', args=[d.arg(name='samlProviderArns', type=d.T.string)]),
  withSamlProviderARNs(samlProviderArns): { Properties+: { SamlProviderARNs: samlProviderArns } },
  '#withSupportedLoginProviders':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cognito-identitypool.html#cfn-cognito-identitypool-supportedloginproviders', args=[d.arg(name='supportedLoginProviders', type=d.T.string)]),
  withSupportedLoginProviders(supportedLoginProviders): { Properties+: { SupportedLoginProviders: supportedLoginProviders } },
}
