(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='LaunchProfile', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::NimbleStudio::LaunchProfile', Properties: { StreamConfiguration: if errorOnEmptyProp then (error 'You need to define StreamConfiguration properties for AWS::NimbleStudio::LaunchProfile resource') else null, StudioComponentIds: if errorOnEmptyProp then (error 'You need to define StudioComponentIds properties for AWS::NimbleStudio::LaunchProfile resource') else null, StudioId: if errorOnEmptyProp then (error 'You need to define StudioId properties for AWS::NimbleStudio::LaunchProfile resource') else null, Ec2SubnetIds: if errorOnEmptyProp then (error 'You need to define Ec2SubnetIds properties for AWS::NimbleStudio::LaunchProfile resource') else null, LaunchProfileProtocolVersions: if errorOnEmptyProp then (error 'You need to define LaunchProfileProtocolVersions properties for AWS::NimbleStudio::LaunchProfile resource') else null, Name: if errorOnEmptyProp then (error 'You need to define Name properties for AWS::NimbleStudio::LaunchProfile resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-description', args=[d.arg(name='description', type=d.T.string)]),
  withDescription(description): { Properties+: { Description: description } },
  '#withEc2SubnetIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-ec2subnetids', args=[d.arg(name='ec2subnetIds', type=d.T.array)]),
  withEc2SubnetIds(ec2subnetIds): { Properties+: { Ec2SubnetIds: ec2subnetIds } },
  '#withEc2SubnetIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-ec2subnetids', args=[d.arg(name='ec2subnetIds', type=d.T.array)]),
  withEc2SubnetIdsMixin(ec2subnetIds): { Properties+: { Ec2SubnetIds+: ec2subnetIds } },
  '#withLaunchProfileProtocolVersions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-launchprofileprotocolversions', args=[d.arg(name='launchProfileProtocolVersions', type=d.T.array)]),
  withLaunchProfileProtocolVersions(launchProfileProtocolVersions): { Properties+: { LaunchProfileProtocolVersions: launchProfileProtocolVersions } },
  '#withLaunchProfileProtocolVersionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-launchprofileprotocolversions', args=[d.arg(name='launchProfileProtocolVersions', type=d.T.array)]),
  withLaunchProfileProtocolVersionsMixin(launchProfileProtocolVersions): { Properties+: { LaunchProfileProtocolVersions+: launchProfileProtocolVersions } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withStreamConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-streamconfiguration', args=[d.arg(name='streamConfiguration', type=d.T.object)]),
  withStreamConfiguration(streamConfiguration): { Properties+: { StreamConfiguration: streamConfiguration } },
  '#withStreamConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-streamconfiguration', args=[d.arg(name='streamConfiguration', type=d.T.object)]),
  withStreamConfigurationMixin(streamConfiguration): { Properties+: { StreamConfiguration+: streamConfiguration } },
  '#withStudioComponentIds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studiocomponentids', args=[d.arg(name='studioComponentIds', type=d.T.array)]),
  withStudioComponentIds(studioComponentIds): { Properties+: { StudioComponentIds: studioComponentIds } },
  '#withStudioComponentIdsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studiocomponentids', args=[d.arg(name='studioComponentIds', type=d.T.array)]),
  withStudioComponentIdsMixin(studioComponentIds): { Properties+: { StudioComponentIds+: studioComponentIds } },
  '#withStudioId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-studioid', args=[d.arg(name='studioId', type=d.T.string)]),
  withStudioId(studioId): { Properties+: { StudioId: studioId } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-nimblestudio-launchprofile.html#cfn-nimblestudio-launchprofile-tags', args=[d.arg(name='tags', type=d.T.object)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
