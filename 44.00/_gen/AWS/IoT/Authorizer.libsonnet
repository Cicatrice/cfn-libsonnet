(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Authorizer', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::IoT::Authorizer', Properties: { AuthorizerFunctionArn: if errorOnEmptyProp then (error 'You need to define AuthorizerFunctionArn properties for AWS::IoT::Authorizer resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withAuthorizerFunctionArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-authorizerfunctionarn', args=[d.arg(name='authorizerFunctionArn', type=d.T.string)]),
  withAuthorizerFunctionArn(authorizerFunctionArn): { Properties+: { AuthorizerFunctionArn: authorizerFunctionArn } },
  '#withAuthorizerName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-authorizername', args=[d.arg(name='authorizerName', type=d.T.string)]),
  withAuthorizerName(authorizerName): { Properties+: { AuthorizerName: authorizerName } },
  '#withSigningDisabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-signingdisabled', args=[d.arg(name='signingDisabled', type=d.T.bool)]),
  withSigningDisabled(signingDisabled): { Properties+: { SigningDisabled: signingDisabled } },
  '#withStatus':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-status', args=[d.arg(name='status', type=d.T.string)]),
  withStatus(status): { Properties+: { Status: status } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
  '#withTokenKeyName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tokenkeyname', args=[d.arg(name='tokenKeyName', type=d.T.string)]),
  withTokenKeyName(tokenKeyName): { Properties+: { TokenKeyName: tokenKeyName } },
  '#withTokenSigningPublicKeys':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tokensigningpublickeys', args=[d.arg(name='tokenSigningPublicKeys', type=d.T.object)]),
  withTokenSigningPublicKeys(tokenSigningPublicKeys): { Properties+: { TokenSigningPublicKeys: tokenSigningPublicKeys } },
  '#withTokenSigningPublicKeysMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-iot-authorizer.html#cfn-iot-authorizer-tokensigningpublickeys', args=[d.arg(name='tokenSigningPublicKeys', type=d.T.object)]),
  withTokenSigningPublicKeysMixin(tokenSigningPublicKeys): { Properties+: { TokenSigningPublicKeys+: tokenSigningPublicKeys } },
}
