(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='EndpointGroup', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::GlobalAccelerator::EndpointGroup', Properties: { ListenerArn: if errorOnEmptyProp then (error 'You need to define ListenerArn properties for AWS::GlobalAccelerator::EndpointGroup resource') else null, EndpointGroupRegion: if errorOnEmptyProp then (error 'You need to define EndpointGroupRegion properties for AWS::GlobalAccelerator::EndpointGroup resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withEndpointConfigurations':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointconfigurations', args=[d.arg(name='endpointConfigurations', type=d.T.array)]),
  withEndpointConfigurations(endpointConfigurations): { Properties+: { EndpointConfigurations: endpointConfigurations } },
  '#withEndpointConfigurationsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointconfigurations', args=[d.arg(name='endpointConfigurations', type=d.T.array)]),
  withEndpointConfigurationsMixin(endpointConfigurations): { Properties+: { EndpointConfigurations+: endpointConfigurations } },
  '#withEndpointGroupRegion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-endpointgroupregion', args=[d.arg(name='endpointGroupRegion', type=d.T.string)]),
  withEndpointGroupRegion(endpointGroupRegion): { Properties+: { EndpointGroupRegion: endpointGroupRegion } },
  '#withHealthCheckIntervalSeconds':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckintervalseconds', args=[d.arg(name='healthCheckIntervalSeconds', type=d.T.number)]),
  withHealthCheckIntervalSeconds(healthCheckIntervalSeconds): { Properties+: { HealthCheckIntervalSeconds: healthCheckIntervalSeconds } },
  '#withHealthCheckPath':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckpath', args=[d.arg(name='healthCheckPath', type=d.T.string)]),
  withHealthCheckPath(healthCheckPath): { Properties+: { HealthCheckPath: healthCheckPath } },
  '#withHealthCheckPort':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckport', args=[d.arg(name='healthCheckPort', type=d.T.number)]),
  withHealthCheckPort(healthCheckPort): { Properties+: { HealthCheckPort: healthCheckPort } },
  '#withHealthCheckProtocol':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-healthcheckprotocol', args=[d.arg(name='healthCheckProtocol', type=d.T.string)]),
  withHealthCheckProtocol(healthCheckProtocol): { Properties+: { HealthCheckProtocol: healthCheckProtocol } },
  '#withListenerArn':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-listenerarn', args=[d.arg(name='listenerArn', type=d.T.string)]),
  withListenerArn(listenerArn): { Properties+: { ListenerArn: listenerArn } },
  '#withPortOverrides':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-portoverrides', args=[d.arg(name='portOverrides', type=d.T.array)]),
  withPortOverrides(portOverrides): { Properties+: { PortOverrides: portOverrides } },
  '#withPortOverridesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-portoverrides', args=[d.arg(name='portOverrides', type=d.T.array)]),
  withPortOverridesMixin(portOverrides): { Properties+: { PortOverrides+: portOverrides } },
  '#withThresholdCount':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-thresholdcount', args=[d.arg(name='thresholdCount', type=d.T.number)]),
  withThresholdCount(thresholdCount): { Properties+: { ThresholdCount: thresholdCount } },
  '#withTrafficDialPercentage':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-globalaccelerator-endpointgroup.html#cfn-globalaccelerator-endpointgroup-trafficdialpercentage', args=[d.arg(name='trafficDialPercentage', type=d.T.number)]),
  withTrafficDialPercentage(trafficDialPercentage): { Properties+: { TrafficDialPercentage: trafficDialPercentage } },
}
