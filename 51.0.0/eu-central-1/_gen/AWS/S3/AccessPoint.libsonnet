(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='AccessPoint', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::S3::AccessPoint', Properties: { Bucket: if errorOnEmptyProp then (error 'You need to define Bucket properties for AWS::S3::AccessPoint resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withBucket':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-bucket', args=[d.arg(name='bucket', type=d.T.string)]),
  withBucket(bucket): { Properties+: { Bucket: bucket } },
  '#withName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-name', args=[d.arg(name='name', type=d.T.string)]),
  withName(name): { Properties+: { Name: name } },
  '#withPolicy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policy', args=[d.arg(name='policy', type=d.T.object)]),
  withPolicy(policy): { Properties+: { Policy: policy } },
  '#withPolicyMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policy', args=[d.arg(name='policy', type=d.T.object)]),
  withPolicyMixin(policy): { Properties+: { Policy+: policy } },
  '#withPolicyStatus':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policystatus', args=[d.arg(name='policyStatus', type=d.T.object)]),
  withPolicyStatus(policyStatus): { Properties+: { PolicyStatus: policyStatus } },
  '#withPolicyStatusMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-policystatus', args=[d.arg(name='policyStatus', type=d.T.object)]),
  withPolicyStatusMixin(policyStatus): { Properties+: { PolicyStatus+: policyStatus } },
  '#withPublicAccessBlockConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-publicaccessblockconfiguration', args=[d.arg(name='publicAccessBlockConfiguration', type=d.T.object)]),
  withPublicAccessBlockConfiguration(publicAccessBlockConfiguration): { Properties+: { PublicAccessBlockConfiguration: publicAccessBlockConfiguration } },
  '#withPublicAccessBlockConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-publicaccessblockconfiguration', args=[d.arg(name='publicAccessBlockConfiguration', type=d.T.object)]),
  withPublicAccessBlockConfigurationMixin(publicAccessBlockConfiguration): { Properties+: { PublicAccessBlockConfiguration+: publicAccessBlockConfiguration } },
  '#withVpcConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-vpcconfiguration', args=[d.arg(name='vpcConfiguration', type=d.T.object)]),
  withVpcConfiguration(vpcConfiguration): { Properties+: { VpcConfiguration: vpcConfiguration } },
  '#withVpcConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-s3-accesspoint.html#cfn-s3-accesspoint-vpcconfiguration', args=[d.arg(name='vpcConfiguration', type=d.T.object)]),
  withVpcConfigurationMixin(vpcConfiguration): { Properties+: { VpcConfiguration+: vpcConfiguration } },
}
