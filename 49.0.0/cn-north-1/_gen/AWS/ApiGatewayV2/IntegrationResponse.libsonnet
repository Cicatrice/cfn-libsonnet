(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='IntegrationResponse', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::ApiGatewayV2::IntegrationResponse', Properties: { ApiId: if errorOnEmptyProp then (error 'You need to define ApiId properties for AWS::ApiGatewayV2::IntegrationResponse resource') else null, IntegrationId: if errorOnEmptyProp then (error 'You need to define IntegrationId properties for AWS::ApiGatewayV2::IntegrationResponse resource') else null, IntegrationResponseKey: if errorOnEmptyProp then (error 'You need to define IntegrationResponseKey properties for AWS::ApiGatewayV2::IntegrationResponse resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withApiId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-apiid', args=[d.arg(name='apiId', type=d.T.string)]),
  withApiId(apiId): { Properties+: { ApiId: apiId } },
  '#withContentHandlingStrategy':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-contenthandlingstrategy', args=[d.arg(name='contentHandlingStrategy', type=d.T.string)]),
  withContentHandlingStrategy(contentHandlingStrategy): { Properties+: { ContentHandlingStrategy: contentHandlingStrategy } },
  '#withIntegrationId':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-integrationid', args=[d.arg(name='integrationId', type=d.T.string)]),
  withIntegrationId(integrationId): { Properties+: { IntegrationId: integrationId } },
  '#withIntegrationResponseKey':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-integrationresponsekey', args=[d.arg(name='integrationResponseKey', type=d.T.string)]),
  withIntegrationResponseKey(integrationResponseKey): { Properties+: { IntegrationResponseKey: integrationResponseKey } },
  '#withResponseParameters':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responseparameters', args=[d.arg(name='responseParameters', type=d.T.object)]),
  withResponseParameters(responseParameters): { Properties+: { ResponseParameters: responseParameters } },
  '#withResponseParametersMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responseparameters', args=[d.arg(name='responseParameters', type=d.T.object)]),
  withResponseParametersMixin(responseParameters): { Properties+: { ResponseParameters+: responseParameters } },
  '#withResponseTemplates':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responsetemplates', args=[d.arg(name='responseTemplates', type=d.T.object)]),
  withResponseTemplates(responseTemplates): { Properties+: { ResponseTemplates: responseTemplates } },
  '#withResponseTemplatesMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-responsetemplates', args=[d.arg(name='responseTemplates', type=d.T.object)]),
  withResponseTemplatesMixin(responseTemplates): { Properties+: { ResponseTemplates+: responseTemplates } },
  '#withTemplateSelectionExpression':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-apigatewayv2-integrationresponse.html#cfn-apigatewayv2-integrationresponse-templateselectionexpression', args=[d.arg(name='templateSelectionExpression', type=d.T.string)]),
  withTemplateSelectionExpression(templateSelectionExpression): { Properties+: { TemplateSelectionExpression: templateSelectionExpression } },
}
