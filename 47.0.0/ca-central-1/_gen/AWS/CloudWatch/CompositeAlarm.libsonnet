(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='CompositeAlarm', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::CloudWatch::CompositeAlarm', Properties: { AlarmName: if errorOnEmptyProp then (error 'You need to define AlarmName properties for AWS::CloudWatch::CompositeAlarm resource') else null, AlarmRule: if errorOnEmptyProp then (error 'You need to define AlarmRule properties for AWS::CloudWatch::CompositeAlarm resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withActionsEnabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-actionsenabled', args=[d.arg(name='actionsEnabled', type=d.T.bool)]),
  withActionsEnabled(actionsEnabled): { Properties+: { ActionsEnabled: actionsEnabled } },
  '#withAlarmActions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions', args=[d.arg(name='alarmActions', type=d.T.array)]),
  withAlarmActions(alarmActions): { Properties+: { AlarmActions: alarmActions } },
  '#withAlarmActionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmactions', args=[d.arg(name='alarmActions', type=d.T.array)]),
  withAlarmActionsMixin(alarmActions): { Properties+: { AlarmActions+: alarmActions } },
  '#withAlarmDescription':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmdescription', args=[d.arg(name='alarmDescription', type=d.T.string)]),
  withAlarmDescription(alarmDescription): { Properties+: { AlarmDescription: alarmDescription } },
  '#withAlarmName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmname', args=[d.arg(name='alarmName', type=d.T.string)]),
  withAlarmName(alarmName): { Properties+: { AlarmName: alarmName } },
  '#withAlarmRule':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-alarmrule', args=[d.arg(name='alarmRule', type=d.T.string)]),
  withAlarmRule(alarmRule): { Properties+: { AlarmRule: alarmRule } },
  '#withInsufficientDataActions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions', args=[d.arg(name='insufficientDataActions', type=d.T.array)]),
  withInsufficientDataActions(insufficientDataActions): { Properties+: { InsufficientDataActions: insufficientDataActions } },
  '#withInsufficientDataActionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-insufficientdataactions', args=[d.arg(name='insufficientDataActions', type=d.T.array)]),
  withInsufficientDataActionsMixin(insufficientDataActions): { Properties+: { InsufficientDataActions+: insufficientDataActions } },
  '#withOKActions':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions', args=[d.arg(name='okactions', type=d.T.array)]),
  withOKActions(okactions): { Properties+: { OKActions: okactions } },
  '#withOKActionsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cloudwatch-compositealarm.html#cfn-cloudwatch-compositealarm-okactions', args=[d.arg(name='okactions', type=d.T.array)]),
  withOKActionsMixin(okactions): { Properties+: { OKActions+: okactions } },
}
