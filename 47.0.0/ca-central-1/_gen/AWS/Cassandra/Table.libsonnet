(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='Table', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::Cassandra::Table', Properties: { KeyspaceName: if errorOnEmptyProp then (error 'You need to define KeyspaceName properties for AWS::Cassandra::Table resource') else null, PartitionKeyColumns: if errorOnEmptyProp then (error 'You need to define PartitionKeyColumns properties for AWS::Cassandra::Table resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withBillingMode':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode', args=[d.arg(name='billingMode', type=d.T.object)]),
  withBillingMode(billingMode): { Properties+: { BillingMode: billingMode } },
  '#withBillingModeMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-billingmode', args=[d.arg(name='billingMode', type=d.T.object)]),
  withBillingModeMixin(billingMode): { Properties+: { BillingMode+: billingMode } },
  '#withClusteringKeyColumns':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns', args=[d.arg(name='clusteringKeyColumns', type=d.T.array)]),
  withClusteringKeyColumns(clusteringKeyColumns): { Properties+: { ClusteringKeyColumns: clusteringKeyColumns } },
  '#withClusteringKeyColumnsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-clusteringkeycolumns', args=[d.arg(name='clusteringKeyColumns', type=d.T.array)]),
  withClusteringKeyColumnsMixin(clusteringKeyColumns): { Properties+: { ClusteringKeyColumns+: clusteringKeyColumns } },
  '#withDefaultTimeToLive':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-defaulttimetolive', args=[d.arg(name='defaultTimeToLive', type=d.T.number)]),
  withDefaultTimeToLive(defaultTimeToLive): { Properties+: { DefaultTimeToLive: defaultTimeToLive } },
  '#withEncryptionSpecification':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification', args=[d.arg(name='encryptionSpecification', type=d.T.object)]),
  withEncryptionSpecification(encryptionSpecification): { Properties+: { EncryptionSpecification: encryptionSpecification } },
  '#withEncryptionSpecificationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-encryptionspecification', args=[d.arg(name='encryptionSpecification', type=d.T.object)]),
  withEncryptionSpecificationMixin(encryptionSpecification): { Properties+: { EncryptionSpecification+: encryptionSpecification } },
  '#withKeyspaceName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-keyspacename', args=[d.arg(name='keyspaceName', type=d.T.string)]),
  withKeyspaceName(keyspaceName): { Properties+: { KeyspaceName: keyspaceName } },
  '#withPartitionKeyColumns':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns', args=[d.arg(name='partitionKeyColumns', type=d.T.array)]),
  withPartitionKeyColumns(partitionKeyColumns): { Properties+: { PartitionKeyColumns: partitionKeyColumns } },
  '#withPartitionKeyColumnsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-partitionkeycolumns', args=[d.arg(name='partitionKeyColumns', type=d.T.array)]),
  withPartitionKeyColumnsMixin(partitionKeyColumns): { Properties+: { PartitionKeyColumns+: partitionKeyColumns } },
  '#withPointInTimeRecoveryEnabled':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-pointintimerecoveryenabled', args=[d.arg(name='pointInTimeRecoveryEnabled', type=d.T.bool)]),
  withPointInTimeRecoveryEnabled(pointInTimeRecoveryEnabled): { Properties+: { PointInTimeRecoveryEnabled: pointInTimeRecoveryEnabled } },
  '#withRegularColumns':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns', args=[d.arg(name='regularColumns', type=d.T.array)]),
  withRegularColumns(regularColumns): { Properties+: { RegularColumns: regularColumns } },
  '#withRegularColumnsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-regularcolumns', args=[d.arg(name='regularColumns', type=d.T.array)]),
  withRegularColumnsMixin(regularColumns): { Properties+: { RegularColumns+: regularColumns } },
  '#withTableName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tablename', args=[d.arg(name='tableName', type=d.T.string)]),
  withTableName(tableName): { Properties+: { TableName: tableName } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-cassandra-table.html#cfn-cassandra-table-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
