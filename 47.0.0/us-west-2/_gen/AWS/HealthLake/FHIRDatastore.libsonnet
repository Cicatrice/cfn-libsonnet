(import '../../../extensions/attributes.libsonnet') + {
  local d = (import 'doc-util/main.libsonnet'),
  '#':: d.pkg(name='FHIRDatastore', url='', help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html'),
  new(errorOnEmptyProp=true): { Type: 'AWS::HealthLake::FHIRDatastore', Properties: { DatastoreTypeVersion: if errorOnEmptyProp then (error 'You need to define DatastoreTypeVersion properties for AWS::HealthLake::FHIRDatastore resource') else null } },
  '#new':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html', args=[d.arg(name='errorOnEmptyProp', type=d.T.bool)]),
  '#withDatastoreName':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-datastorename', args=[d.arg(name='datastoreName', type=d.T.string)]),
  withDatastoreName(datastoreName): { Properties+: { DatastoreName: datastoreName } },
  '#withDatastoreTypeVersion':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-datastoretypeversion', args=[d.arg(name='datastoreTypeVersion', type=d.T.string)]),
  withDatastoreTypeVersion(datastoreTypeVersion): { Properties+: { DatastoreTypeVersion: datastoreTypeVersion } },
  '#withPreloadDataConfig':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-preloaddataconfig', args=[d.arg(name='preloadDataConfig', type=d.T.object)]),
  withPreloadDataConfig(preloadDataConfig): { Properties+: { PreloadDataConfig: preloadDataConfig } },
  '#withPreloadDataConfigMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-preloaddataconfig', args=[d.arg(name='preloadDataConfig', type=d.T.object)]),
  withPreloadDataConfigMixin(preloadDataConfig): { Properties+: { PreloadDataConfig+: preloadDataConfig } },
  '#withSseConfiguration':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-sseconfiguration', args=[d.arg(name='sseConfiguration', type=d.T.object)]),
  withSseConfiguration(sseConfiguration): { Properties+: { SseConfiguration: sseConfiguration } },
  '#withSseConfigurationMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-sseconfiguration', args=[d.arg(name='sseConfiguration', type=d.T.object)]),
  withSseConfigurationMixin(sseConfiguration): { Properties+: { SseConfiguration+: sseConfiguration } },
  '#withTags':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTags(tags): { Properties+: { Tags: tags } },
  '#withTagsMixin':: d.fn(help='https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-healthlake-fhirdatastore.html#cfn-healthlake-fhirdatastore-tags', args=[d.arg(name='tags', type=d.T.array)]),
  withTagsMixin(tags): { Properties+: { Tags+: tags } },
}
